<?xml version="1.0" encoding="UTF-8"?>
<con:soapui-project id="1cbb48f3-1ab0-4186-bcf4-09e1fccf5d6d" activeEnvironment="Default" name="SSP_Test_SOAP" resourceRoot="" soapui-version="5.4.0" abortOnError="false" runType="SEQUENTIAL" xmlns:con="http://eviware.com/soapui/config"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.actions.iface.tools.soapui.TestRunnerAction@values-local"><![CDATA[<xml-fragment xmlns:con="http://eviware.com/soapui/config">
  <con:entry key="Report Format(s)" value=""/>
  <con:entry key="Host:Port" value=""/>
  <con:entry key="Export JUnit Results" value="true"/>
  <con:entry key="Export All" value="true"/>
  <con:entry key="Save After" value="false"/>
  <con:entry key="Add Settings" value="false"/>
  <con:entry key="WSS Password Type" value=""/>
  <con:entry key="TestSuite" value="&lt;all>"/>
  <con:entry key="Endpoint" value=""/>
  <con:entry key="Select Report Type" value=""/>
  <con:entry key="System Properties" value=""/>
  <con:entry key="Password" value=""/>
  <con:entry key="Print Report" value="true"/>
  <con:entry key="Open Report" value="false"/>
  <con:entry key="Export JUnit Results with test properties" value="true"/>
  <con:entry key="Global Properties" value=""/>
  <con:entry key="Project Properties" value=""/>
  <con:entry key="Project Password" value=""/>
  <con:entry key="TestCase" value="&lt;all>"/>
  <con:entry key="Username" value=""/>
  <con:entry key="user-settings.xml Password" value=""/>
  <con:entry key="TestRunner Path" value=""/>
  <con:entry key="Environment" value="Default"/>
  <con:entry key="Coverage Report" value="false"/>
  <con:entry key="Enable UI" value="false"/>
  <con:entry key="Root Folder" value="C:\Users\Refaque\Desktop\GroovyScripts\GroovyReport"/>
  <con:entry key="Ignore Errors" value="false"/>
  <con:entry key="Domain" value=""/>
  <con:entry key="Tool Args" value=""/>
  <con:entry key="Save Project" value="false"/>
</xml-fragment>]]></con:setting></con:settings><con:interface xsi:type="con:WsdlInterface" id="bfb3c064-2dba-4466-878f-f185bbf8bcef" wsaVersion="NONE" name="CountryInfoServiceSoapBinding12" type="wsdl" bindingName="{http://www.oorsprong.org/websamples.countryinfo}CountryInfoServiceSoapBinding12" soapVersion="1_2" anonymous="optional" definition="http://webservices.oorsprong.org/websamples.countryinfo/CountryInfoService.wso?WSDL" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache type="TEXT" rootPart="http://webservices.oorsprong.org/websamples.countryinfo/CountryInfoService.wso?WSDL"><con:part><con:url>http://webservices.oorsprong.org/websamples.countryinfo/CountryInfoService.wso?WSDL</con:url><con:content><![CDATA[<definitions name="CountryInfoService" targetNamespace="http://www.oorsprong.org/websamples.countryinfo" xmlns="http://schemas.xmlsoap.org/wsdl/" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:soap12="http://schemas.xmlsoap.org/wsdl/soap12/" xmlns:tns="http://www.oorsprong.org/websamples.countryinfo">
  <types>
    <xs:schema elementFormDefault="qualified" targetNamespace="http://www.oorsprong.org/websamples.countryinfo">
      <xs:complexType name="tContinent">
        <xs:sequence>
          <xs:element name="sCode" type="xs:string"/>
          <xs:element name="sName" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="tCurrency">
        <xs:sequence>
          <xs:element name="sISOCode" type="xs:string"/>
          <xs:element name="sName" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="tCountryCodeAndName">
        <xs:sequence>
          <xs:element name="sISOCode" type="xs:string"/>
          <xs:element name="sName" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="tCountryCodeAndNameGroupedByContinent">
        <xs:sequence>
          <xs:element name="Continent" type="tns:tContinent"/>
          <xs:element name="CountryCodeAndNames" type="tns:ArrayOftCountryCodeAndName"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="tCountryInfo">
        <xs:sequence>
          <xs:element name="sISOCode" type="xs:string"/>
          <xs:element name="sName" type="xs:string"/>
          <xs:element name="sCapitalCity" type="xs:string"/>
          <xs:element name="sPhoneCode" type="xs:string"/>
          <xs:element name="sContinentCode" type="xs:string"/>
          <xs:element name="sCurrencyISOCode" type="xs:string"/>
          <xs:element name="sCountryFlag" type="xs:string"/>
          <xs:element name="Languages" type="tns:ArrayOftLanguage"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="tLanguage">
        <xs:sequence>
          <xs:element name="sISOCode" type="xs:string"/>
          <xs:element name="sName" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="ArrayOftCountryCodeAndName">
        <xs:sequence>
          <xs:element name="tCountryCodeAndName" type="tns:tCountryCodeAndName" minOccurs="0" maxOccurs="unbounded" nillable="true"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="ArrayOftLanguage">
        <xs:sequence>
          <xs:element name="tLanguage" type="tns:tLanguage" minOccurs="0" maxOccurs="unbounded" nillable="true"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="ArrayOftContinent">
        <xs:sequence>
          <xs:element name="tContinent" type="tns:tContinent" minOccurs="0" maxOccurs="unbounded" nillable="true"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="ArrayOftCurrency">
        <xs:sequence>
          <xs:element name="tCurrency" type="tns:tCurrency" minOccurs="0" maxOccurs="unbounded" nillable="true"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="ArrayOftCountryCodeAndNameGroupedByContinent">
        <xs:sequence>
          <xs:element name="tCountryCodeAndNameGroupedByContinent" type="tns:tCountryCodeAndNameGroupedByContinent" minOccurs="0" maxOccurs="unbounded" nillable="true"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="ArrayOftCountryInfo">
        <xs:sequence>
          <xs:element name="tCountryInfo" type="tns:tCountryInfo" minOccurs="0" maxOccurs="unbounded" nillable="true"/>
        </xs:sequence>
      </xs:complexType>
      <xs:element name="ListOfContinentsByName">
        <xs:complexType>
          <xs:sequence/>
        </xs:complexType>
      </xs:element>
      <xs:element name="ListOfContinentsByNameResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element name="ListOfContinentsByNameResult" type="tns:ArrayOftContinent"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="ListOfContinentsByCode">
        <xs:complexType>
          <xs:sequence/>
        </xs:complexType>
      </xs:element>
      <xs:element name="ListOfContinentsByCodeResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element name="ListOfContinentsByCodeResult" type="tns:ArrayOftContinent"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="ListOfCurrenciesByName">
        <xs:complexType>
          <xs:sequence/>
        </xs:complexType>
      </xs:element>
      <xs:element name="ListOfCurrenciesByNameResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element name="ListOfCurrenciesByNameResult" type="tns:ArrayOftCurrency"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="ListOfCurrenciesByCode">
        <xs:complexType>
          <xs:sequence/>
        </xs:complexType>
      </xs:element>
      <xs:element name="ListOfCurrenciesByCodeResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element name="ListOfCurrenciesByCodeResult" type="tns:ArrayOftCurrency"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="CurrencyName">
        <xs:complexType>
          <xs:sequence>
            <xs:element name="sCurrencyISOCode" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="CurrencyNameResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element name="CurrencyNameResult" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="ListOfCountryNamesByCode">
        <xs:complexType>
          <xs:sequence/>
        </xs:complexType>
      </xs:element>
      <xs:element name="ListOfCountryNamesByCodeResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element name="ListOfCountryNamesByCodeResult" type="tns:ArrayOftCountryCodeAndName"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="ListOfCountryNamesByName">
        <xs:complexType>
          <xs:sequence/>
        </xs:complexType>
      </xs:element>
      <xs:element name="ListOfCountryNamesByNameResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element name="ListOfCountryNamesByNameResult" type="tns:ArrayOftCountryCodeAndName"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="ListOfCountryNamesGroupedByContinent">
        <xs:complexType>
          <xs:sequence/>
        </xs:complexType>
      </xs:element>
      <xs:element name="ListOfCountryNamesGroupedByContinentResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element name="ListOfCountryNamesGroupedByContinentResult" type="tns:ArrayOftCountryCodeAndNameGroupedByContinent"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="CountryName">
        <xs:complexType>
          <xs:sequence>
            <xs:element name="sCountryISOCode" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="CountryNameResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element name="CountryNameResult" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="CountryISOCode">
        <xs:complexType>
          <xs:sequence>
            <xs:element name="sCountryName" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="CountryISOCodeResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element name="CountryISOCodeResult" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="CapitalCity">
        <xs:complexType>
          <xs:sequence>
            <xs:element name="sCountryISOCode" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="CapitalCityResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element name="CapitalCityResult" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="CountryCurrency">
        <xs:complexType>
          <xs:sequence>
            <xs:element name="sCountryISOCode" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="CountryCurrencyResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element name="CountryCurrencyResult" type="tns:tCurrency"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="CountryFlag">
        <xs:complexType>
          <xs:sequence>
            <xs:element name="sCountryISOCode" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="CountryFlagResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element name="CountryFlagResult" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="CountryIntPhoneCode">
        <xs:complexType>
          <xs:sequence>
            <xs:element name="sCountryISOCode" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="CountryIntPhoneCodeResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element name="CountryIntPhoneCodeResult" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="FullCountryInfo">
        <xs:complexType>
          <xs:sequence>
            <xs:element name="sCountryISOCode" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="FullCountryInfoResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element name="FullCountryInfoResult" type="tns:tCountryInfo"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="FullCountryInfoAllCountries">
        <xs:complexType>
          <xs:sequence/>
        </xs:complexType>
      </xs:element>
      <xs:element name="FullCountryInfoAllCountriesResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element name="FullCountryInfoAllCountriesResult" type="tns:ArrayOftCountryInfo"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="CountriesUsingCurrency">
        <xs:complexType>
          <xs:sequence>
            <xs:element name="sISOCurrencyCode" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="CountriesUsingCurrencyResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element name="CountriesUsingCurrencyResult" type="tns:ArrayOftCountryCodeAndName"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="ListOfLanguagesByName">
        <xs:complexType>
          <xs:sequence/>
        </xs:complexType>
      </xs:element>
      <xs:element name="ListOfLanguagesByNameResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element name="ListOfLanguagesByNameResult" type="tns:ArrayOftLanguage"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="ListOfLanguagesByCode">
        <xs:complexType>
          <xs:sequence/>
        </xs:complexType>
      </xs:element>
      <xs:element name="ListOfLanguagesByCodeResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element name="ListOfLanguagesByCodeResult" type="tns:ArrayOftLanguage"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="LanguageName">
        <xs:complexType>
          <xs:sequence>
            <xs:element name="sISOCode" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="LanguageNameResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element name="LanguageNameResult" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="LanguageISOCode">
        <xs:complexType>
          <xs:sequence>
            <xs:element name="sLanguageName" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="LanguageISOCodeResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element name="LanguageISOCodeResult" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
    </xs:schema>
  </types>
  <message name="ListOfContinentsByNameSoapRequest">
    <part name="parameters" element="tns:ListOfContinentsByName"/>
  </message>
  <message name="ListOfContinentsByNameSoapResponse">
    <part name="parameters" element="tns:ListOfContinentsByNameResponse"/>
  </message>
  <message name="ListOfContinentsByCodeSoapRequest">
    <part name="parameters" element="tns:ListOfContinentsByCode"/>
  </message>
  <message name="ListOfContinentsByCodeSoapResponse">
    <part name="parameters" element="tns:ListOfContinentsByCodeResponse"/>
  </message>
  <message name="ListOfCurrenciesByNameSoapRequest">
    <part name="parameters" element="tns:ListOfCurrenciesByName"/>
  </message>
  <message name="ListOfCurrenciesByNameSoapResponse">
    <part name="parameters" element="tns:ListOfCurrenciesByNameResponse"/>
  </message>
  <message name="ListOfCurrenciesByCodeSoapRequest">
    <part name="parameters" element="tns:ListOfCurrenciesByCode"/>
  </message>
  <message name="ListOfCurrenciesByCodeSoapResponse">
    <part name="parameters" element="tns:ListOfCurrenciesByCodeResponse"/>
  </message>
  <message name="CurrencyNameSoapRequest">
    <part name="parameters" element="tns:CurrencyName"/>
  </message>
  <message name="CurrencyNameSoapResponse">
    <part name="parameters" element="tns:CurrencyNameResponse"/>
  </message>
  <message name="ListOfCountryNamesByCodeSoapRequest">
    <part name="parameters" element="tns:ListOfCountryNamesByCode"/>
  </message>
  <message name="ListOfCountryNamesByCodeSoapResponse">
    <part name="parameters" element="tns:ListOfCountryNamesByCodeResponse"/>
  </message>
  <message name="ListOfCountryNamesByNameSoapRequest">
    <part name="parameters" element="tns:ListOfCountryNamesByName"/>
  </message>
  <message name="ListOfCountryNamesByNameSoapResponse">
    <part name="parameters" element="tns:ListOfCountryNamesByNameResponse"/>
  </message>
  <message name="ListOfCountryNamesGroupedByContinentSoapRequest">
    <part name="parameters" element="tns:ListOfCountryNamesGroupedByContinent"/>
  </message>
  <message name="ListOfCountryNamesGroupedByContinentSoapResponse">
    <part name="parameters" element="tns:ListOfCountryNamesGroupedByContinentResponse"/>
  </message>
  <message name="CountryNameSoapRequest">
    <part name="parameters" element="tns:CountryName"/>
  </message>
  <message name="CountryNameSoapResponse">
    <part name="parameters" element="tns:CountryNameResponse"/>
  </message>
  <message name="CountryISOCodeSoapRequest">
    <part name="parameters" element="tns:CountryISOCode"/>
  </message>
  <message name="CountryISOCodeSoapResponse">
    <part name="parameters" element="tns:CountryISOCodeResponse"/>
  </message>
  <message name="CapitalCitySoapRequest">
    <part name="parameters" element="tns:CapitalCity"/>
  </message>
  <message name="CapitalCitySoapResponse">
    <part name="parameters" element="tns:CapitalCityResponse"/>
  </message>
  <message name="CountryCurrencySoapRequest">
    <part name="parameters" element="tns:CountryCurrency"/>
  </message>
  <message name="CountryCurrencySoapResponse">
    <part name="parameters" element="tns:CountryCurrencyResponse"/>
  </message>
  <message name="CountryFlagSoapRequest">
    <part name="parameters" element="tns:CountryFlag"/>
  </message>
  <message name="CountryFlagSoapResponse">
    <part name="parameters" element="tns:CountryFlagResponse"/>
  </message>
  <message name="CountryIntPhoneCodeSoapRequest">
    <part name="parameters" element="tns:CountryIntPhoneCode"/>
  </message>
  <message name="CountryIntPhoneCodeSoapResponse">
    <part name="parameters" element="tns:CountryIntPhoneCodeResponse"/>
  </message>
  <message name="FullCountryInfoSoapRequest">
    <part name="parameters" element="tns:FullCountryInfo"/>
  </message>
  <message name="FullCountryInfoSoapResponse">
    <part name="parameters" element="tns:FullCountryInfoResponse"/>
  </message>
  <message name="FullCountryInfoAllCountriesSoapRequest">
    <part name="parameters" element="tns:FullCountryInfoAllCountries"/>
  </message>
  <message name="FullCountryInfoAllCountriesSoapResponse">
    <part name="parameters" element="tns:FullCountryInfoAllCountriesResponse"/>
  </message>
  <message name="CountriesUsingCurrencySoapRequest">
    <part name="parameters" element="tns:CountriesUsingCurrency"/>
  </message>
  <message name="CountriesUsingCurrencySoapResponse">
    <part name="parameters" element="tns:CountriesUsingCurrencyResponse"/>
  </message>
  <message name="ListOfLanguagesByNameSoapRequest">
    <part name="parameters" element="tns:ListOfLanguagesByName"/>
  </message>
  <message name="ListOfLanguagesByNameSoapResponse">
    <part name="parameters" element="tns:ListOfLanguagesByNameResponse"/>
  </message>
  <message name="ListOfLanguagesByCodeSoapRequest">
    <part name="parameters" element="tns:ListOfLanguagesByCode"/>
  </message>
  <message name="ListOfLanguagesByCodeSoapResponse">
    <part name="parameters" element="tns:ListOfLanguagesByCodeResponse"/>
  </message>
  <message name="LanguageNameSoapRequest">
    <part name="parameters" element="tns:LanguageName"/>
  </message>
  <message name="LanguageNameSoapResponse">
    <part name="parameters" element="tns:LanguageNameResponse"/>
  </message>
  <message name="LanguageISOCodeSoapRequest">
    <part name="parameters" element="tns:LanguageISOCode"/>
  </message>
  <message name="LanguageISOCodeSoapResponse">
    <part name="parameters" element="tns:LanguageISOCodeResponse"/>
  </message>
  <portType name="CountryInfoServiceSoapType">
    <operation name="ListOfContinentsByName">
      <documentation>Returns a list of continents ordered by name.</documentation>
      <input message="tns:ListOfContinentsByNameSoapRequest"/>
      <output message="tns:ListOfContinentsByNameSoapResponse"/>
    </operation>
    <operation name="ListOfContinentsByCode">
      <documentation>Returns a list of continents ordered by code.</documentation>
      <input message="tns:ListOfContinentsByCodeSoapRequest"/>
      <output message="tns:ListOfContinentsByCodeSoapResponse"/>
    </operation>
    <operation name="ListOfCurrenciesByName">
      <documentation>Returns a list of currencies ordered by name.</documentation>
      <input message="tns:ListOfCurrenciesByNameSoapRequest"/>
      <output message="tns:ListOfCurrenciesByNameSoapResponse"/>
    </operation>
    <operation name="ListOfCurrenciesByCode">
      <documentation>Returns a list of currencies ordered by code.</documentation>
      <input message="tns:ListOfCurrenciesByCodeSoapRequest"/>
      <output message="tns:ListOfCurrenciesByCodeSoapResponse"/>
    </operation>
    <operation name="CurrencyName">
      <documentation>Returns the name of the currency (if found)</documentation>
      <input message="tns:CurrencyNameSoapRequest"/>
      <output message="tns:CurrencyNameSoapResponse"/>
    </operation>
    <operation name="ListOfCountryNamesByCode">
      <documentation>Returns a list of all stored counties ordered by ISO code</documentation>
      <input message="tns:ListOfCountryNamesByCodeSoapRequest"/>
      <output message="tns:ListOfCountryNamesByCodeSoapResponse"/>
    </operation>
    <operation name="ListOfCountryNamesByName">
      <documentation>Returns a list of all stored counties ordered by country name</documentation>
      <input message="tns:ListOfCountryNamesByNameSoapRequest"/>
      <output message="tns:ListOfCountryNamesByNameSoapResponse"/>
    </operation>
    <operation name="ListOfCountryNamesGroupedByContinent">
      <documentation>Returns a list of all stored counties grouped per continent</documentation>
      <input message="tns:ListOfCountryNamesGroupedByContinentSoapRequest"/>
      <output message="tns:ListOfCountryNamesGroupedByContinentSoapResponse"/>
    </operation>
    <operation name="CountryName">
      <documentation>Searches the database for a country by the passed ISO country code</documentation>
      <input message="tns:CountryNameSoapRequest"/>
      <output message="tns:CountryNameSoapResponse"/>
    </operation>
    <operation name="CountryISOCode">
      <documentation>This function tries to found a country based on the passed country name.</documentation>
      <input message="tns:CountryISOCodeSoapRequest"/>
      <output message="tns:CountryISOCodeSoapResponse"/>
    </operation>
    <operation name="CapitalCity">
      <documentation>Returns the  name of the captial city for the passed country code</documentation>
      <input message="tns:CapitalCitySoapRequest"/>
      <output message="tns:CapitalCitySoapResponse"/>
    </operation>
    <operation name="CountryCurrency">
      <documentation>Returns the currency ISO code and name for the passed country ISO code</documentation>
      <input message="tns:CountryCurrencySoapRequest"/>
      <output message="tns:CountryCurrencySoapResponse"/>
    </operation>
    <operation name="CountryFlag">
      <documentation>Returns a link to a picture of the country flag</documentation>
      <input message="tns:CountryFlagSoapRequest"/>
      <output message="tns:CountryFlagSoapResponse"/>
    </operation>
    <operation name="CountryIntPhoneCode">
      <documentation>Returns the internation phone code for the passed ISO country code</documentation>
      <input message="tns:CountryIntPhoneCodeSoapRequest"/>
      <output message="tns:CountryIntPhoneCodeSoapResponse"/>
    </operation>
    <operation name="FullCountryInfo">
      <documentation>Returns a struct with all the stored country information. Pass the ISO country code</documentation>
      <input message="tns:FullCountryInfoSoapRequest"/>
      <output message="tns:FullCountryInfoSoapResponse"/>
    </operation>
    <operation name="FullCountryInfoAllCountries">
      <documentation>Returns an array with all countries and all the language information stored</documentation>
      <input message="tns:FullCountryInfoAllCountriesSoapRequest"/>
      <output message="tns:FullCountryInfoAllCountriesSoapResponse"/>
    </operation>
    <operation name="CountriesUsingCurrency">
      <documentation>Returns a list of all countries that use the same currency code. Pass a ISO currency code</documentation>
      <input message="tns:CountriesUsingCurrencySoapRequest"/>
      <output message="tns:CountriesUsingCurrencySoapResponse"/>
    </operation>
    <operation name="ListOfLanguagesByName">
      <documentation>Returns an array of languages ordered by name</documentation>
      <input message="tns:ListOfLanguagesByNameSoapRequest"/>
      <output message="tns:ListOfLanguagesByNameSoapResponse"/>
    </operation>
    <operation name="ListOfLanguagesByCode">
      <documentation>Returns an array of languages ordered by code</documentation>
      <input message="tns:ListOfLanguagesByCodeSoapRequest"/>
      <output message="tns:ListOfLanguagesByCodeSoapResponse"/>
    </operation>
    <operation name="LanguageName">
      <documentation>Find a language name based on the passed ISO language code</documentation>
      <input message="tns:LanguageNameSoapRequest"/>
      <output message="tns:LanguageNameSoapResponse"/>
    </operation>
    <operation name="LanguageISOCode">
      <documentation>Find a language ISO code based on the passed language name</documentation>
      <input message="tns:LanguageISOCodeSoapRequest"/>
      <output message="tns:LanguageISOCodeSoapResponse"/>
    </operation>
  </portType>
  <binding name="CountryInfoServiceSoapBinding" type="tns:CountryInfoServiceSoapType">
    <soap:binding style="document" transport="http://schemas.xmlsoap.org/soap/http"/>
    <operation name="ListOfContinentsByName">
      <soap:operation soapAction="" style="document"/>
      <input>
        <soap:body use="literal"/>
      </input>
      <output>
        <soap:body use="literal"/>
      </output>
    </operation>
    <operation name="ListOfContinentsByCode">
      <soap:operation soapAction="" style="document"/>
      <input>
        <soap:body use="literal"/>
      </input>
      <output>
        <soap:body use="literal"/>
      </output>
    </operation>
    <operation name="ListOfCurrenciesByName">
      <soap:operation soapAction="" style="document"/>
      <input>
        <soap:body use="literal"/>
      </input>
      <output>
        <soap:body use="literal"/>
      </output>
    </operation>
    <operation name="ListOfCurrenciesByCode">
      <soap:operation soapAction="" style="document"/>
      <input>
        <soap:body use="literal"/>
      </input>
      <output>
        <soap:body use="literal"/>
      </output>
    </operation>
    <operation name="CurrencyName">
      <soap:operation soapAction="" style="document"/>
      <input>
        <soap:body use="literal"/>
      </input>
      <output>
        <soap:body use="literal"/>
      </output>
    </operation>
    <operation name="ListOfCountryNamesByCode">
      <soap:operation soapAction="" style="document"/>
      <input>
        <soap:body use="literal"/>
      </input>
      <output>
        <soap:body use="literal"/>
      </output>
    </operation>
    <operation name="ListOfCountryNamesByName">
      <soap:operation soapAction="" style="document"/>
      <input>
        <soap:body use="literal"/>
      </input>
      <output>
        <soap:body use="literal"/>
      </output>
    </operation>
    <operation name="ListOfCountryNamesGroupedByContinent">
      <soap:operation soapAction="" style="document"/>
      <input>
        <soap:body use="literal"/>
      </input>
      <output>
        <soap:body use="literal"/>
      </output>
    </operation>
    <operation name="CountryName">
      <soap:operation soapAction="" style="document"/>
      <input>
        <soap:body use="literal"/>
      </input>
      <output>
        <soap:body use="literal"/>
      </output>
    </operation>
    <operation name="CountryISOCode">
      <soap:operation soapAction="" style="document"/>
      <input>
        <soap:body use="literal"/>
      </input>
      <output>
        <soap:body use="literal"/>
      </output>
    </operation>
    <operation name="CapitalCity">
      <soap:operation soapAction="" style="document"/>
      <input>
        <soap:body use="literal"/>
      </input>
      <output>
        <soap:body use="literal"/>
      </output>
    </operation>
    <operation name="CountryCurrency">
      <soap:operation soapAction="" style="document"/>
      <input>
        <soap:body use="literal"/>
      </input>
      <output>
        <soap:body use="literal"/>
      </output>
    </operation>
    <operation name="CountryFlag">
      <soap:operation soapAction="" style="document"/>
      <input>
        <soap:body use="literal"/>
      </input>
      <output>
        <soap:body use="literal"/>
      </output>
    </operation>
    <operation name="CountryIntPhoneCode">
      <soap:operation soapAction="" style="document"/>
      <input>
        <soap:body use="literal"/>
      </input>
      <output>
        <soap:body use="literal"/>
      </output>
    </operation>
    <operation name="FullCountryInfo">
      <soap:operation soapAction="" style="document"/>
      <input>
        <soap:body use="literal"/>
      </input>
      <output>
        <soap:body use="literal"/>
      </output>
    </operation>
    <operation name="FullCountryInfoAllCountries">
      <soap:operation soapAction="" style="document"/>
      <input>
        <soap:body use="literal"/>
      </input>
      <output>
        <soap:body use="literal"/>
      </output>
    </operation>
    <operation name="CountriesUsingCurrency">
      <soap:operation soapAction="" style="document"/>
      <input>
        <soap:body use="literal"/>
      </input>
      <output>
        <soap:body use="literal"/>
      </output>
    </operation>
    <operation name="ListOfLanguagesByName">
      <soap:operation soapAction="" style="document"/>
      <input>
        <soap:body use="literal"/>
      </input>
      <output>
        <soap:body use="literal"/>
      </output>
    </operation>
    <operation name="ListOfLanguagesByCode">
      <soap:operation soapAction="" style="document"/>
      <input>
        <soap:body use="literal"/>
      </input>
      <output>
        <soap:body use="literal"/>
      </output>
    </operation>
    <operation name="LanguageName">
      <soap:operation soapAction="" style="document"/>
      <input>
        <soap:body use="literal"/>
      </input>
      <output>
        <soap:body use="literal"/>
      </output>
    </operation>
    <operation name="LanguageISOCode">
      <soap:operation soapAction="" style="document"/>
      <input>
        <soap:body use="literal"/>
      </input>
      <output>
        <soap:body use="literal"/>
      </output>
    </operation>
  </binding>
  <binding name="CountryInfoServiceSoapBinding12" type="tns:CountryInfoServiceSoapType">
    <soap12:binding style="document" transport="http://schemas.xmlsoap.org/soap/http"/>
    <operation name="ListOfContinentsByName">
      <soap12:operation soapAction="" style="document"/>
      <input>
        <soap12:body use="literal"/>
      </input>
      <output>
        <soap12:body use="literal"/>
      </output>
    </operation>
    <operation name="ListOfContinentsByCode">
      <soap12:operation soapAction="" style="document"/>
      <input>
        <soap12:body use="literal"/>
      </input>
      <output>
        <soap12:body use="literal"/>
      </output>
    </operation>
    <operation name="ListOfCurrenciesByName">
      <soap12:operation soapAction="" style="document"/>
      <input>
        <soap12:body use="literal"/>
      </input>
      <output>
        <soap12:body use="literal"/>
      </output>
    </operation>
    <operation name="ListOfCurrenciesByCode">
      <soap12:operation soapAction="" style="document"/>
      <input>
        <soap12:body use="literal"/>
      </input>
      <output>
        <soap12:body use="literal"/>
      </output>
    </operation>
    <operation name="CurrencyName">
      <soap12:operation soapAction="" style="document"/>
      <input>
        <soap12:body use="literal"/>
      </input>
      <output>
        <soap12:body use="literal"/>
      </output>
    </operation>
    <operation name="ListOfCountryNamesByCode">
      <soap12:operation soapAction="" style="document"/>
      <input>
        <soap12:body use="literal"/>
      </input>
      <output>
        <soap12:body use="literal"/>
      </output>
    </operation>
    <operation name="ListOfCountryNamesByName">
      <soap12:operation soapAction="" style="document"/>
      <input>
        <soap12:body use="literal"/>
      </input>
      <output>
        <soap12:body use="literal"/>
      </output>
    </operation>
    <operation name="ListOfCountryNamesGroupedByContinent">
      <soap12:operation soapAction="" style="document"/>
      <input>
        <soap12:body use="literal"/>
      </input>
      <output>
        <soap12:body use="literal"/>
      </output>
    </operation>
    <operation name="CountryName">
      <soap12:operation soapAction="" style="document"/>
      <input>
        <soap12:body use="literal"/>
      </input>
      <output>
        <soap12:body use="literal"/>
      </output>
    </operation>
    <operation name="CountryISOCode">
      <soap12:operation soapAction="" style="document"/>
      <input>
        <soap12:body use="literal"/>
      </input>
      <output>
        <soap12:body use="literal"/>
      </output>
    </operation>
    <operation name="CapitalCity">
      <soap12:operation soapAction="" style="document"/>
      <input>
        <soap12:body use="literal"/>
      </input>
      <output>
        <soap12:body use="literal"/>
      </output>
    </operation>
    <operation name="CountryCurrency">
      <soap12:operation soapAction="" style="document"/>
      <input>
        <soap12:body use="literal"/>
      </input>
      <output>
        <soap12:body use="literal"/>
      </output>
    </operation>
    <operation name="CountryFlag">
      <soap12:operation soapAction="" style="document"/>
      <input>
        <soap12:body use="literal"/>
      </input>
      <output>
        <soap12:body use="literal"/>
      </output>
    </operation>
    <operation name="CountryIntPhoneCode">
      <soap12:operation soapAction="" style="document"/>
      <input>
        <soap12:body use="literal"/>
      </input>
      <output>
        <soap12:body use="literal"/>
      </output>
    </operation>
    <operation name="FullCountryInfo">
      <soap12:operation soapAction="" style="document"/>
      <input>
        <soap12:body use="literal"/>
      </input>
      <output>
        <soap12:body use="literal"/>
      </output>
    </operation>
    <operation name="FullCountryInfoAllCountries">
      <soap12:operation soapAction="" style="document"/>
      <input>
        <soap12:body use="literal"/>
      </input>
      <output>
        <soap12:body use="literal"/>
      </output>
    </operation>
    <operation name="CountriesUsingCurrency">
      <soap12:operation soapAction="" style="document"/>
      <input>
        <soap12:body use="literal"/>
      </input>
      <output>
        <soap12:body use="literal"/>
      </output>
    </operation>
    <operation name="ListOfLanguagesByName">
      <soap12:operation soapAction="" style="document"/>
      <input>
        <soap12:body use="literal"/>
      </input>
      <output>
        <soap12:body use="literal"/>
      </output>
    </operation>
    <operation name="ListOfLanguagesByCode">
      <soap12:operation soapAction="" style="document"/>
      <input>
        <soap12:body use="literal"/>
      </input>
      <output>
        <soap12:body use="literal"/>
      </output>
    </operation>
    <operation name="LanguageName">
      <soap12:operation soapAction="" style="document"/>
      <input>
        <soap12:body use="literal"/>
      </input>
      <output>
        <soap12:body use="literal"/>
      </output>
    </operation>
    <operation name="LanguageISOCode">
      <soap12:operation soapAction="" style="document"/>
      <input>
        <soap12:body use="literal"/>
      </input>
      <output>
        <soap12:body use="literal"/>
      </output>
    </operation>
  </binding>
  <service name="CountryInfoService">
    <documentation>This DataFlex Web Service opens up country information. 2 letter ISO codes are used for Country code. There are functions to retrieve the used Currency, Language, Capital City, Continent and Telephone code.</documentation>
    <port name="CountryInfoServiceSoap" binding="tns:CountryInfoServiceSoapBinding">
      <soap:address location="http://webservices.oorsprong.org/websamples.countryinfo/CountryInfoService.wso"/>
    </port>
    <port name="CountryInfoServiceSoap12" binding="tns:CountryInfoServiceSoapBinding12">
      <soap12:address location="http://webservices.oorsprong.org/websamples.countryinfo/CountryInfoService.wso"/>
    </port>
  </service>
</definitions>]]></con:content><con:type>http://schemas.xmlsoap.org/wsdl/</con:type></con:part></con:definitionCache><con:endpoints><con:endpoint>http://webservices.oorsprong.org/websamples.countryinfo/CountryInfoService.wso</con:endpoint></con:endpoints><con:operation id="b4ddfe8d-cc8e-46b5-9fc8-876cc030eed9" isOneWay="false" action="" name="CapitalCity" bindingOperationName="CapitalCity" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="0134d8b5-b0fe-4777-ae45-2b150bf5a4cf" name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://webservices.oorsprong.org/websamples.countryinfo/CountryInfoService.wso</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope" xmlns:web="http://www.oorsprong.org/websamples.countryinfo">\r
   <soap:Header/>\r
   <soap:Body>\r
      <web:CapitalCity>\r
         <web:sCountryISOCode>?</web:sCountryISOCode>\r
      </web:CapitalCity>\r
   </soap:Body>\r
</soap:Envelope>]]></con:request><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://www.oorsprong.org/websamples.countryinfo/CountryInfoServiceSoapType/CapitalCityRequest"/></con:call></con:operation><con:operation id="0737613d-3709-4116-b154-263ad9ddd046" isOneWay="false" action="" name="CountriesUsingCurrency" bindingOperationName="CountriesUsingCurrency" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="9f95e70d-740c-4c5f-93e8-274fb4d0d766" name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://webservices.oorsprong.org/websamples.countryinfo/CountryInfoService.wso</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope" xmlns:web="http://www.oorsprong.org/websamples.countryinfo">\r
   <soap:Header/>\r
   <soap:Body>\r
      <web:CountriesUsingCurrency>\r
         <web:sISOCurrencyCode>?</web:sISOCurrencyCode>\r
      </web:CountriesUsingCurrency>\r
   </soap:Body>\r
</soap:Envelope>]]></con:request><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://www.oorsprong.org/websamples.countryinfo/CountryInfoServiceSoapType/CountriesUsingCurrencyRequest"/></con:call></con:operation><con:operation id="3f0f9e4c-5d82-47bc-a7f8-fae290fa35b6" isOneWay="false" action="" name="CountryCurrency" bindingOperationName="CountryCurrency" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="b763db2c-3a4d-4614-a1bd-6140430ebd7e" name="Request 1"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://webservices.oorsprong.org/websamples.countryinfo/CountryInfoService.wso</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope" xmlns:web="http://www.oorsprong.org/websamples.countryinfo">\r
   <soap:Header/>\r
   <soap:Body>\r
      <web:CountryCurrency>\r
         <web:sCountryISOCode>DZ</web:sCountryISOCode>\r
      </web:CountryCurrency>\r
   </soap:Body>\r
</soap:Envelope>]]></con:request><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://www.oorsprong.org/websamples.countryinfo/CountryInfoServiceSoapType/CountryCurrencyRequest"/><con:wsrmConfig version="1.2"/></con:call></con:operation><con:operation id="2ff47668-447c-4a0c-86fd-d4949c362e56" isOneWay="false" action="" name="CountryFlag" bindingOperationName="CountryFlag" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="0e183b96-2b97-4997-af7a-efd8c18b06ee" name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://webservices.oorsprong.org/websamples.countryinfo/CountryInfoService.wso</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope" xmlns:web="http://www.oorsprong.org/websamples.countryinfo">\r
   <soap:Header/>\r
   <soap:Body>\r
      <web:CountryFlag>\r
         <web:sCountryISOCode>?</web:sCountryISOCode>\r
      </web:CountryFlag>\r
   </soap:Body>\r
</soap:Envelope>]]></con:request><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://www.oorsprong.org/websamples.countryinfo/CountryInfoServiceSoapType/CountryFlagRequest"/></con:call></con:operation><con:operation id="da47fa7b-c84e-47ce-8889-0c6a485b8323" isOneWay="false" action="" name="CountryIntPhoneCode" bindingOperationName="CountryIntPhoneCode" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="0d1ff278-1ec3-4e73-9253-41a49f96a4fc" name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://webservices.oorsprong.org/websamples.countryinfo/CountryInfoService.wso</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope" xmlns:web="http://www.oorsprong.org/websamples.countryinfo">\r
   <soap:Header/>\r
   <soap:Body>\r
      <web:CountryIntPhoneCode>\r
         <web:sCountryISOCode>?</web:sCountryISOCode>\r
      </web:CountryIntPhoneCode>\r
   </soap:Body>\r
</soap:Envelope>]]></con:request><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://www.oorsprong.org/websamples.countryinfo/CountryInfoServiceSoapType/CountryIntPhoneCodeRequest"/></con:call></con:operation><con:operation id="4c14707a-94ab-44a6-bbc0-a84aee679305" isOneWay="false" action="" name="CountryISOCode" bindingOperationName="CountryISOCode" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="c047b31f-4472-42e1-997c-c87ef2dfea9a" name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://webservices.oorsprong.org/websamples.countryinfo/CountryInfoService.wso</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope" xmlns:web="http://www.oorsprong.org/websamples.countryinfo">\r
   <soap:Header/>\r
   <soap:Body>\r
      <web:CountryISOCode>\r
         <web:sCountryName>?</web:sCountryName>\r
      </web:CountryISOCode>\r
   </soap:Body>\r
</soap:Envelope>]]></con:request><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://www.oorsprong.org/websamples.countryinfo/CountryInfoServiceSoapType/CountryISOCodeRequest"/></con:call></con:operation><con:operation id="ee01ee6c-1a79-423d-bfbf-7294f61ed342" isOneWay="false" action="" name="CountryName" bindingOperationName="CountryName" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="c653d0a8-d37c-44ba-93a8-b275bcf7a4ee" name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://webservices.oorsprong.org/websamples.countryinfo/CountryInfoService.wso</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope" xmlns:web="http://www.oorsprong.org/websamples.countryinfo">\r
   <soap:Header/>\r
   <soap:Body>\r
      <web:CountryName>\r
         <web:sCountryISOCode>?</web:sCountryISOCode>\r
      </web:CountryName>\r
   </soap:Body>\r
</soap:Envelope>]]></con:request><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://www.oorsprong.org/websamples.countryinfo/CountryInfoServiceSoapType/CountryNameRequest"/></con:call></con:operation><con:operation id="4c52f1dd-26af-4d16-9cfa-6902fd3eedb1" isOneWay="false" action="" name="CurrencyName" bindingOperationName="CurrencyName" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="41064553-5dd5-43b7-86e9-e2a4b5ef6bc4" name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://webservices.oorsprong.org/websamples.countryinfo/CountryInfoService.wso</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope" xmlns:web="http://www.oorsprong.org/websamples.countryinfo">\r
   <soap:Header/>\r
   <soap:Body>\r
      <web:CurrencyName>\r
         <web:sCurrencyISOCode>?</web:sCurrencyISOCode>\r
      </web:CurrencyName>\r
   </soap:Body>\r
</soap:Envelope>]]></con:request><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://www.oorsprong.org/websamples.countryinfo/CountryInfoServiceSoapType/CurrencyNameRequest"/></con:call></con:operation><con:operation id="75c93e6b-c713-4ecd-a8a7-d3abe9c75c7e" isOneWay="false" action="" name="FullCountryInfo" bindingOperationName="FullCountryInfo" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="501e6edb-a18b-4c1f-a4d8-6694961f805d" name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://webservices.oorsprong.org/websamples.countryinfo/CountryInfoService.wso</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope" xmlns:web="http://www.oorsprong.org/websamples.countryinfo">\r
   <soap:Header/>\r
   <soap:Body>\r
      <web:FullCountryInfo>\r
         <web:sCountryISOCode>?</web:sCountryISOCode>\r
      </web:FullCountryInfo>\r
   </soap:Body>\r
</soap:Envelope>]]></con:request><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://www.oorsprong.org/websamples.countryinfo/CountryInfoServiceSoapType/FullCountryInfoRequest"/></con:call></con:operation><con:operation id="cbb98652-a34b-413a-85c9-0d2e2f1afc13" isOneWay="false" action="" name="FullCountryInfoAllCountries" bindingOperationName="FullCountryInfoAllCountries" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="bf32e603-7063-48a2-9131-a2dd924b0595" name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://webservices.oorsprong.org/websamples.countryinfo/CountryInfoService.wso</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope" xmlns:web="http://www.oorsprong.org/websamples.countryinfo">\r
   <soap:Header/>\r
   <soap:Body>\r
      <web:FullCountryInfoAllCountries/>\r
   </soap:Body>\r
</soap:Envelope>]]></con:request><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://www.oorsprong.org/websamples.countryinfo/CountryInfoServiceSoapType/FullCountryInfoAllCountriesRequest"/></con:call></con:operation><con:operation id="8b306d8a-6c15-4333-b5ad-c5b796157a4e" isOneWay="false" action="" name="LanguageISOCode" bindingOperationName="LanguageISOCode" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="993cd3c0-6179-4c51-b83f-7f4033147caa" name="Request 1"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://webservices.oorsprong.org/websamples.countryinfo/CountryInfoService.wso</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope" xmlns:web="http://www.oorsprong.org/websamples.countryinfo">\r
   <soap:Header/>\r
   <soap:Body>\r
      <web:LanguageISOCode>\r
         <web:sLanguageName>Spanish</web:sLanguageName>\r
      </web:LanguageISOCode>\r
   </soap:Body>\r
</soap:Envelope>]]></con:request><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://www.oorsprong.org/websamples.countryinfo/CountryInfoServiceSoapType/LanguageISOCodeRequest"/><con:wsrmConfig version="1.2"/></con:call></con:operation><con:operation id="3b3e2cf9-d845-454c-8e30-3796e1c18289" isOneWay="false" action="" name="LanguageName" bindingOperationName="LanguageName" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="e0e17a96-aafe-4f95-9723-367409f9ba9d" name="Request 1"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://webservices.oorsprong.org/websamples.countryinfo/CountryInfoService.wso</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope" xmlns:web="http://www.oorsprong.org/websamples.countryinfo">\r
   <soap:Header/>\r
   <soap:Body>\r
      <web:LanguageName>\r
         <web:sISOCode>es</web:sISOCode>\r
      </web:LanguageName>\r
   </soap:Body>\r
</soap:Envelope>]]></con:request><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://www.oorsprong.org/websamples.countryinfo/CountryInfoServiceSoapType/LanguageNameRequest"/><con:wsrmConfig version="1.2"/></con:call></con:operation><con:operation id="98150004-8165-4f06-8d25-7e567b95fa46" isOneWay="false" action="" name="ListOfContinentsByCode" bindingOperationName="ListOfContinentsByCode" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="01ffefe8-686b-48a4-85f4-cf97b160132c" name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://webservices.oorsprong.org/websamples.countryinfo/CountryInfoService.wso</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope" xmlns:web="http://www.oorsprong.org/websamples.countryinfo">\r
   <soap:Header/>\r
   <soap:Body>\r
      <web:ListOfContinentsByCode/>\r
   </soap:Body>\r
</soap:Envelope>]]></con:request><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://www.oorsprong.org/websamples.countryinfo/CountryInfoServiceSoapType/ListOfContinentsByCodeRequest"/></con:call></con:operation><con:operation id="95a39fea-528d-4c03-9605-b72efcfcbdd7" isOneWay="false" action="" name="ListOfContinentsByName" bindingOperationName="ListOfContinentsByName" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="d6f906cb-5bdb-4701-9398-56d8b5f487f9" name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://webservices.oorsprong.org/websamples.countryinfo/CountryInfoService.wso</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope" xmlns:web="http://www.oorsprong.org/websamples.countryinfo">\r
   <soap:Header/>\r
   <soap:Body>\r
      <web:ListOfContinentsByName/>\r
   </soap:Body>\r
</soap:Envelope>]]></con:request><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://www.oorsprong.org/websamples.countryinfo/CountryInfoServiceSoapType/ListOfContinentsByNameRequest"/></con:call></con:operation><con:operation id="1777a921-1100-4b19-aa8f-9a24962704b5" isOneWay="false" action="" name="ListOfCountryNamesByCode" bindingOperationName="ListOfCountryNamesByCode" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="e1c687e7-26c3-4be1-a24a-99b1896bc108" name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://webservices.oorsprong.org/websamples.countryinfo/CountryInfoService.wso</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope" xmlns:web="http://www.oorsprong.org/websamples.countryinfo">\r
   <soap:Header/>\r
   <soap:Body>\r
      <web:ListOfCountryNamesByCode/>\r
   </soap:Body>\r
</soap:Envelope>]]></con:request><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://www.oorsprong.org/websamples.countryinfo/CountryInfoServiceSoapType/ListOfCountryNamesByCodeRequest"/></con:call></con:operation><con:operation id="9705582d-eb02-4a19-9414-a94fa267ff28" isOneWay="false" action="" name="ListOfCountryNamesByName" bindingOperationName="ListOfCountryNamesByName" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="49dc3a80-f455-45c4-8cba-c630d80efad0" name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://webservices.oorsprong.org/websamples.countryinfo/CountryInfoService.wso</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope" xmlns:web="http://www.oorsprong.org/websamples.countryinfo">\r
   <soap:Header/>\r
   <soap:Body>\r
      <web:ListOfCountryNamesByName/>\r
   </soap:Body>\r
</soap:Envelope>]]></con:request><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://www.oorsprong.org/websamples.countryinfo/CountryInfoServiceSoapType/ListOfCountryNamesByNameRequest"/></con:call></con:operation><con:operation id="685bbf8d-13e4-4361-b427-bee9c1fe3819" isOneWay="false" action="" name="ListOfCountryNamesGroupedByContinent" bindingOperationName="ListOfCountryNamesGroupedByContinent" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="94817c83-fcea-406d-afe3-9084865c846c" name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://webservices.oorsprong.org/websamples.countryinfo/CountryInfoService.wso</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope" xmlns:web="http://www.oorsprong.org/websamples.countryinfo">\r
   <soap:Header/>\r
   <soap:Body>\r
      <web:ListOfCountryNamesGroupedByContinent/>\r
   </soap:Body>\r
</soap:Envelope>]]></con:request><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://www.oorsprong.org/websamples.countryinfo/CountryInfoServiceSoapType/ListOfCountryNamesGroupedByContinentRequest"/></con:call></con:operation><con:operation id="3328794b-04e6-47e0-a4fe-b6b58cb3350e" isOneWay="false" action="" name="ListOfCurrenciesByCode" bindingOperationName="ListOfCurrenciesByCode" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="cccaa48e-8d31-49dc-b68d-23343de7c9ff" name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://webservices.oorsprong.org/websamples.countryinfo/CountryInfoService.wso</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope" xmlns:web="http://www.oorsprong.org/websamples.countryinfo">\r
   <soap:Header/>\r
   <soap:Body>\r
      <web:ListOfCurrenciesByCode/>\r
   </soap:Body>\r
</soap:Envelope>]]></con:request><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://www.oorsprong.org/websamples.countryinfo/CountryInfoServiceSoapType/ListOfCurrenciesByCodeRequest"/></con:call></con:operation><con:operation id="a8177bb8-519f-43ae-9205-729171365110" isOneWay="false" action="" name="ListOfCurrenciesByName" bindingOperationName="ListOfCurrenciesByName" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="e5dff2bb-0717-444d-bf1d-3ad3a99464fa" name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://webservices.oorsprong.org/websamples.countryinfo/CountryInfoService.wso</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope" xmlns:web="http://www.oorsprong.org/websamples.countryinfo">\r
   <soap:Header/>\r
   <soap:Body>\r
      <web:ListOfCurrenciesByName/>\r
   </soap:Body>\r
</soap:Envelope>]]></con:request><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://www.oorsprong.org/websamples.countryinfo/CountryInfoServiceSoapType/ListOfCurrenciesByNameRequest"/></con:call></con:operation><con:operation id="29de2738-d904-4bb6-9085-984814734428" isOneWay="false" action="" name="ListOfLanguagesByCode" bindingOperationName="ListOfLanguagesByCode" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="cb1ae609-8694-4647-a1c7-cb49eae81c55" name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://webservices.oorsprong.org/websamples.countryinfo/CountryInfoService.wso</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope" xmlns:web="http://www.oorsprong.org/websamples.countryinfo">\r
   <soap:Header/>\r
   <soap:Body>\r
      <web:ListOfLanguagesByCode/>\r
   </soap:Body>\r
</soap:Envelope>]]></con:request><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://www.oorsprong.org/websamples.countryinfo/CountryInfoServiceSoapType/ListOfLanguagesByCodeRequest"/></con:call></con:operation><con:operation id="4fcbb24e-1254-46d8-b242-f176b15db82e" isOneWay="false" action="" name="ListOfLanguagesByName" bindingOperationName="ListOfLanguagesByName" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="39b45e08-62ae-468c-8c45-177f3155707b" name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://webservices.oorsprong.org/websamples.countryinfo/CountryInfoService.wso</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope" xmlns:web="http://www.oorsprong.org/websamples.countryinfo">\r
   <soap:Header/>\r
   <soap:Body>\r
      <web:ListOfLanguagesByName/>\r
   </soap:Body>\r
</soap:Envelope>]]></con:request><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://www.oorsprong.org/websamples.countryinfo/CountryInfoServiceSoapType/ListOfLanguagesByNameRequest"/></con:call></con:operation></con:interface><con:interface xsi:type="con:WsdlInterface" id="906cb3d6-aa96-46de-9f9f-28a1bcfdb108" wsaVersion="NONE" name="CountryInfoServiceSoapBinding" type="wsdl" bindingName="{http://www.oorsprong.org/websamples.countryinfo}CountryInfoServiceSoapBinding" soapVersion="1_1" anonymous="optional" definition="http://webservices.oorsprong.org/websamples.countryinfo/CountryInfoService.wso?WSDL" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache type="TEXT" rootPart="http://webservices.oorsprong.org/websamples.countryinfo/CountryInfoService.wso?WSDL"><con:part><con:url>http://webservices.oorsprong.org/websamples.countryinfo/CountryInfoService.wso?WSDL</con:url><con:content><![CDATA[<definitions name="CountryInfoService" targetNamespace="http://www.oorsprong.org/websamples.countryinfo" xmlns="http://schemas.xmlsoap.org/wsdl/" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:soap12="http://schemas.xmlsoap.org/wsdl/soap12/" xmlns:tns="http://www.oorsprong.org/websamples.countryinfo">
  <types>
    <xs:schema elementFormDefault="qualified" targetNamespace="http://www.oorsprong.org/websamples.countryinfo">
      <xs:complexType name="tContinent">
        <xs:sequence>
          <xs:element name="sCode" type="xs:string"/>
          <xs:element name="sName" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="tCurrency">
        <xs:sequence>
          <xs:element name="sISOCode" type="xs:string"/>
          <xs:element name="sName" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="tCountryCodeAndName">
        <xs:sequence>
          <xs:element name="sISOCode" type="xs:string"/>
          <xs:element name="sName" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="tCountryCodeAndNameGroupedByContinent">
        <xs:sequence>
          <xs:element name="Continent" type="tns:tContinent"/>
          <xs:element name="CountryCodeAndNames" type="tns:ArrayOftCountryCodeAndName"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="tCountryInfo">
        <xs:sequence>
          <xs:element name="sISOCode" type="xs:string"/>
          <xs:element name="sName" type="xs:string"/>
          <xs:element name="sCapitalCity" type="xs:string"/>
          <xs:element name="sPhoneCode" type="xs:string"/>
          <xs:element name="sContinentCode" type="xs:string"/>
          <xs:element name="sCurrencyISOCode" type="xs:string"/>
          <xs:element name="sCountryFlag" type="xs:string"/>
          <xs:element name="Languages" type="tns:ArrayOftLanguage"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="tLanguage">
        <xs:sequence>
          <xs:element name="sISOCode" type="xs:string"/>
          <xs:element name="sName" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="ArrayOftCountryCodeAndName">
        <xs:sequence>
          <xs:element name="tCountryCodeAndName" type="tns:tCountryCodeAndName" minOccurs="0" maxOccurs="unbounded" nillable="true"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="ArrayOftLanguage">
        <xs:sequence>
          <xs:element name="tLanguage" type="tns:tLanguage" minOccurs="0" maxOccurs="unbounded" nillable="true"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="ArrayOftContinent">
        <xs:sequence>
          <xs:element name="tContinent" type="tns:tContinent" minOccurs="0" maxOccurs="unbounded" nillable="true"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="ArrayOftCurrency">
        <xs:sequence>
          <xs:element name="tCurrency" type="tns:tCurrency" minOccurs="0" maxOccurs="unbounded" nillable="true"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="ArrayOftCountryCodeAndNameGroupedByContinent">
        <xs:sequence>
          <xs:element name="tCountryCodeAndNameGroupedByContinent" type="tns:tCountryCodeAndNameGroupedByContinent" minOccurs="0" maxOccurs="unbounded" nillable="true"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="ArrayOftCountryInfo">
        <xs:sequence>
          <xs:element name="tCountryInfo" type="tns:tCountryInfo" minOccurs="0" maxOccurs="unbounded" nillable="true"/>
        </xs:sequence>
      </xs:complexType>
      <xs:element name="ListOfContinentsByName">
        <xs:complexType>
          <xs:sequence/>
        </xs:complexType>
      </xs:element>
      <xs:element name="ListOfContinentsByNameResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element name="ListOfContinentsByNameResult" type="tns:ArrayOftContinent"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="ListOfContinentsByCode">
        <xs:complexType>
          <xs:sequence/>
        </xs:complexType>
      </xs:element>
      <xs:element name="ListOfContinentsByCodeResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element name="ListOfContinentsByCodeResult" type="tns:ArrayOftContinent"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="ListOfCurrenciesByName">
        <xs:complexType>
          <xs:sequence/>
        </xs:complexType>
      </xs:element>
      <xs:element name="ListOfCurrenciesByNameResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element name="ListOfCurrenciesByNameResult" type="tns:ArrayOftCurrency"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="ListOfCurrenciesByCode">
        <xs:complexType>
          <xs:sequence/>
        </xs:complexType>
      </xs:element>
      <xs:element name="ListOfCurrenciesByCodeResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element name="ListOfCurrenciesByCodeResult" type="tns:ArrayOftCurrency"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="CurrencyName">
        <xs:complexType>
          <xs:sequence>
            <xs:element name="sCurrencyISOCode" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="CurrencyNameResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element name="CurrencyNameResult" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="ListOfCountryNamesByCode">
        <xs:complexType>
          <xs:sequence/>
        </xs:complexType>
      </xs:element>
      <xs:element name="ListOfCountryNamesByCodeResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element name="ListOfCountryNamesByCodeResult" type="tns:ArrayOftCountryCodeAndName"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="ListOfCountryNamesByName">
        <xs:complexType>
          <xs:sequence/>
        </xs:complexType>
      </xs:element>
      <xs:element name="ListOfCountryNamesByNameResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element name="ListOfCountryNamesByNameResult" type="tns:ArrayOftCountryCodeAndName"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="ListOfCountryNamesGroupedByContinent">
        <xs:complexType>
          <xs:sequence/>
        </xs:complexType>
      </xs:element>
      <xs:element name="ListOfCountryNamesGroupedByContinentResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element name="ListOfCountryNamesGroupedByContinentResult" type="tns:ArrayOftCountryCodeAndNameGroupedByContinent"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="CountryName">
        <xs:complexType>
          <xs:sequence>
            <xs:element name="sCountryISOCode" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="CountryNameResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element name="CountryNameResult" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="CountryISOCode">
        <xs:complexType>
          <xs:sequence>
            <xs:element name="sCountryName" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="CountryISOCodeResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element name="CountryISOCodeResult" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="CapitalCity">
        <xs:complexType>
          <xs:sequence>
            <xs:element name="sCountryISOCode" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="CapitalCityResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element name="CapitalCityResult" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="CountryCurrency">
        <xs:complexType>
          <xs:sequence>
            <xs:element name="sCountryISOCode" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="CountryCurrencyResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element name="CountryCurrencyResult" type="tns:tCurrency"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="CountryFlag">
        <xs:complexType>
          <xs:sequence>
            <xs:element name="sCountryISOCode" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="CountryFlagResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element name="CountryFlagResult" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="CountryIntPhoneCode">
        <xs:complexType>
          <xs:sequence>
            <xs:element name="sCountryISOCode" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="CountryIntPhoneCodeResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element name="CountryIntPhoneCodeResult" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="FullCountryInfo">
        <xs:complexType>
          <xs:sequence>
            <xs:element name="sCountryISOCode" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="FullCountryInfoResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element name="FullCountryInfoResult" type="tns:tCountryInfo"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="FullCountryInfoAllCountries">
        <xs:complexType>
          <xs:sequence/>
        </xs:complexType>
      </xs:element>
      <xs:element name="FullCountryInfoAllCountriesResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element name="FullCountryInfoAllCountriesResult" type="tns:ArrayOftCountryInfo"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="CountriesUsingCurrency">
        <xs:complexType>
          <xs:sequence>
            <xs:element name="sISOCurrencyCode" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="CountriesUsingCurrencyResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element name="CountriesUsingCurrencyResult" type="tns:ArrayOftCountryCodeAndName"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="ListOfLanguagesByName">
        <xs:complexType>
          <xs:sequence/>
        </xs:complexType>
      </xs:element>
      <xs:element name="ListOfLanguagesByNameResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element name="ListOfLanguagesByNameResult" type="tns:ArrayOftLanguage"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="ListOfLanguagesByCode">
        <xs:complexType>
          <xs:sequence/>
        </xs:complexType>
      </xs:element>
      <xs:element name="ListOfLanguagesByCodeResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element name="ListOfLanguagesByCodeResult" type="tns:ArrayOftLanguage"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="LanguageName">
        <xs:complexType>
          <xs:sequence>
            <xs:element name="sISOCode" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="LanguageNameResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element name="LanguageNameResult" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="LanguageISOCode">
        <xs:complexType>
          <xs:sequence>
            <xs:element name="sLanguageName" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="LanguageISOCodeResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element name="LanguageISOCodeResult" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
    </xs:schema>
  </types>
  <message name="ListOfContinentsByNameSoapRequest">
    <part name="parameters" element="tns:ListOfContinentsByName"/>
  </message>
  <message name="ListOfContinentsByNameSoapResponse">
    <part name="parameters" element="tns:ListOfContinentsByNameResponse"/>
  </message>
  <message name="ListOfContinentsByCodeSoapRequest">
    <part name="parameters" element="tns:ListOfContinentsByCode"/>
  </message>
  <message name="ListOfContinentsByCodeSoapResponse">
    <part name="parameters" element="tns:ListOfContinentsByCodeResponse"/>
  </message>
  <message name="ListOfCurrenciesByNameSoapRequest">
    <part name="parameters" element="tns:ListOfCurrenciesByName"/>
  </message>
  <message name="ListOfCurrenciesByNameSoapResponse">
    <part name="parameters" element="tns:ListOfCurrenciesByNameResponse"/>
  </message>
  <message name="ListOfCurrenciesByCodeSoapRequest">
    <part name="parameters" element="tns:ListOfCurrenciesByCode"/>
  </message>
  <message name="ListOfCurrenciesByCodeSoapResponse">
    <part name="parameters" element="tns:ListOfCurrenciesByCodeResponse"/>
  </message>
  <message name="CurrencyNameSoapRequest">
    <part name="parameters" element="tns:CurrencyName"/>
  </message>
  <message name="CurrencyNameSoapResponse">
    <part name="parameters" element="tns:CurrencyNameResponse"/>
  </message>
  <message name="ListOfCountryNamesByCodeSoapRequest">
    <part name="parameters" element="tns:ListOfCountryNamesByCode"/>
  </message>
  <message name="ListOfCountryNamesByCodeSoapResponse">
    <part name="parameters" element="tns:ListOfCountryNamesByCodeResponse"/>
  </message>
  <message name="ListOfCountryNamesByNameSoapRequest">
    <part name="parameters" element="tns:ListOfCountryNamesByName"/>
  </message>
  <message name="ListOfCountryNamesByNameSoapResponse">
    <part name="parameters" element="tns:ListOfCountryNamesByNameResponse"/>
  </message>
  <message name="ListOfCountryNamesGroupedByContinentSoapRequest">
    <part name="parameters" element="tns:ListOfCountryNamesGroupedByContinent"/>
  </message>
  <message name="ListOfCountryNamesGroupedByContinentSoapResponse">
    <part name="parameters" element="tns:ListOfCountryNamesGroupedByContinentResponse"/>
  </message>
  <message name="CountryNameSoapRequest">
    <part name="parameters" element="tns:CountryName"/>
  </message>
  <message name="CountryNameSoapResponse">
    <part name="parameters" element="tns:CountryNameResponse"/>
  </message>
  <message name="CountryISOCodeSoapRequest">
    <part name="parameters" element="tns:CountryISOCode"/>
  </message>
  <message name="CountryISOCodeSoapResponse">
    <part name="parameters" element="tns:CountryISOCodeResponse"/>
  </message>
  <message name="CapitalCitySoapRequest">
    <part name="parameters" element="tns:CapitalCity"/>
  </message>
  <message name="CapitalCitySoapResponse">
    <part name="parameters" element="tns:CapitalCityResponse"/>
  </message>
  <message name="CountryCurrencySoapRequest">
    <part name="parameters" element="tns:CountryCurrency"/>
  </message>
  <message name="CountryCurrencySoapResponse">
    <part name="parameters" element="tns:CountryCurrencyResponse"/>
  </message>
  <message name="CountryFlagSoapRequest">
    <part name="parameters" element="tns:CountryFlag"/>
  </message>
  <message name="CountryFlagSoapResponse">
    <part name="parameters" element="tns:CountryFlagResponse"/>
  </message>
  <message name="CountryIntPhoneCodeSoapRequest">
    <part name="parameters" element="tns:CountryIntPhoneCode"/>
  </message>
  <message name="CountryIntPhoneCodeSoapResponse">
    <part name="parameters" element="tns:CountryIntPhoneCodeResponse"/>
  </message>
  <message name="FullCountryInfoSoapRequest">
    <part name="parameters" element="tns:FullCountryInfo"/>
  </message>
  <message name="FullCountryInfoSoapResponse">
    <part name="parameters" element="tns:FullCountryInfoResponse"/>
  </message>
  <message name="FullCountryInfoAllCountriesSoapRequest">
    <part name="parameters" element="tns:FullCountryInfoAllCountries"/>
  </message>
  <message name="FullCountryInfoAllCountriesSoapResponse">
    <part name="parameters" element="tns:FullCountryInfoAllCountriesResponse"/>
  </message>
  <message name="CountriesUsingCurrencySoapRequest">
    <part name="parameters" element="tns:CountriesUsingCurrency"/>
  </message>
  <message name="CountriesUsingCurrencySoapResponse">
    <part name="parameters" element="tns:CountriesUsingCurrencyResponse"/>
  </message>
  <message name="ListOfLanguagesByNameSoapRequest">
    <part name="parameters" element="tns:ListOfLanguagesByName"/>
  </message>
  <message name="ListOfLanguagesByNameSoapResponse">
    <part name="parameters" element="tns:ListOfLanguagesByNameResponse"/>
  </message>
  <message name="ListOfLanguagesByCodeSoapRequest">
    <part name="parameters" element="tns:ListOfLanguagesByCode"/>
  </message>
  <message name="ListOfLanguagesByCodeSoapResponse">
    <part name="parameters" element="tns:ListOfLanguagesByCodeResponse"/>
  </message>
  <message name="LanguageNameSoapRequest">
    <part name="parameters" element="tns:LanguageName"/>
  </message>
  <message name="LanguageNameSoapResponse">
    <part name="parameters" element="tns:LanguageNameResponse"/>
  </message>
  <message name="LanguageISOCodeSoapRequest">
    <part name="parameters" element="tns:LanguageISOCode"/>
  </message>
  <message name="LanguageISOCodeSoapResponse">
    <part name="parameters" element="tns:LanguageISOCodeResponse"/>
  </message>
  <portType name="CountryInfoServiceSoapType">
    <operation name="ListOfContinentsByName">
      <documentation>Returns a list of continents ordered by name.</documentation>
      <input message="tns:ListOfContinentsByNameSoapRequest"/>
      <output message="tns:ListOfContinentsByNameSoapResponse"/>
    </operation>
    <operation name="ListOfContinentsByCode">
      <documentation>Returns a list of continents ordered by code.</documentation>
      <input message="tns:ListOfContinentsByCodeSoapRequest"/>
      <output message="tns:ListOfContinentsByCodeSoapResponse"/>
    </operation>
    <operation name="ListOfCurrenciesByName">
      <documentation>Returns a list of currencies ordered by name.</documentation>
      <input message="tns:ListOfCurrenciesByNameSoapRequest"/>
      <output message="tns:ListOfCurrenciesByNameSoapResponse"/>
    </operation>
    <operation name="ListOfCurrenciesByCode">
      <documentation>Returns a list of currencies ordered by code.</documentation>
      <input message="tns:ListOfCurrenciesByCodeSoapRequest"/>
      <output message="tns:ListOfCurrenciesByCodeSoapResponse"/>
    </operation>
    <operation name="CurrencyName">
      <documentation>Returns the name of the currency (if found)</documentation>
      <input message="tns:CurrencyNameSoapRequest"/>
      <output message="tns:CurrencyNameSoapResponse"/>
    </operation>
    <operation name="ListOfCountryNamesByCode">
      <documentation>Returns a list of all stored counties ordered by ISO code</documentation>
      <input message="tns:ListOfCountryNamesByCodeSoapRequest"/>
      <output message="tns:ListOfCountryNamesByCodeSoapResponse"/>
    </operation>
    <operation name="ListOfCountryNamesByName">
      <documentation>Returns a list of all stored counties ordered by country name</documentation>
      <input message="tns:ListOfCountryNamesByNameSoapRequest"/>
      <output message="tns:ListOfCountryNamesByNameSoapResponse"/>
    </operation>
    <operation name="ListOfCountryNamesGroupedByContinent">
      <documentation>Returns a list of all stored counties grouped per continent</documentation>
      <input message="tns:ListOfCountryNamesGroupedByContinentSoapRequest"/>
      <output message="tns:ListOfCountryNamesGroupedByContinentSoapResponse"/>
    </operation>
    <operation name="CountryName">
      <documentation>Searches the database for a country by the passed ISO country code</documentation>
      <input message="tns:CountryNameSoapRequest"/>
      <output message="tns:CountryNameSoapResponse"/>
    </operation>
    <operation name="CountryISOCode">
      <documentation>This function tries to found a country based on the passed country name.</documentation>
      <input message="tns:CountryISOCodeSoapRequest"/>
      <output message="tns:CountryISOCodeSoapResponse"/>
    </operation>
    <operation name="CapitalCity">
      <documentation>Returns the  name of the captial city for the passed country code</documentation>
      <input message="tns:CapitalCitySoapRequest"/>
      <output message="tns:CapitalCitySoapResponse"/>
    </operation>
    <operation name="CountryCurrency">
      <documentation>Returns the currency ISO code and name for the passed country ISO code</documentation>
      <input message="tns:CountryCurrencySoapRequest"/>
      <output message="tns:CountryCurrencySoapResponse"/>
    </operation>
    <operation name="CountryFlag">
      <documentation>Returns a link to a picture of the country flag</documentation>
      <input message="tns:CountryFlagSoapRequest"/>
      <output message="tns:CountryFlagSoapResponse"/>
    </operation>
    <operation name="CountryIntPhoneCode">
      <documentation>Returns the internation phone code for the passed ISO country code</documentation>
      <input message="tns:CountryIntPhoneCodeSoapRequest"/>
      <output message="tns:CountryIntPhoneCodeSoapResponse"/>
    </operation>
    <operation name="FullCountryInfo">
      <documentation>Returns a struct with all the stored country information. Pass the ISO country code</documentation>
      <input message="tns:FullCountryInfoSoapRequest"/>
      <output message="tns:FullCountryInfoSoapResponse"/>
    </operation>
    <operation name="FullCountryInfoAllCountries">
      <documentation>Returns an array with all countries and all the language information stored</documentation>
      <input message="tns:FullCountryInfoAllCountriesSoapRequest"/>
      <output message="tns:FullCountryInfoAllCountriesSoapResponse"/>
    </operation>
    <operation name="CountriesUsingCurrency">
      <documentation>Returns a list of all countries that use the same currency code. Pass a ISO currency code</documentation>
      <input message="tns:CountriesUsingCurrencySoapRequest"/>
      <output message="tns:CountriesUsingCurrencySoapResponse"/>
    </operation>
    <operation name="ListOfLanguagesByName">
      <documentation>Returns an array of languages ordered by name</documentation>
      <input message="tns:ListOfLanguagesByNameSoapRequest"/>
      <output message="tns:ListOfLanguagesByNameSoapResponse"/>
    </operation>
    <operation name="ListOfLanguagesByCode">
      <documentation>Returns an array of languages ordered by code</documentation>
      <input message="tns:ListOfLanguagesByCodeSoapRequest"/>
      <output message="tns:ListOfLanguagesByCodeSoapResponse"/>
    </operation>
    <operation name="LanguageName">
      <documentation>Find a language name based on the passed ISO language code</documentation>
      <input message="tns:LanguageNameSoapRequest"/>
      <output message="tns:LanguageNameSoapResponse"/>
    </operation>
    <operation name="LanguageISOCode">
      <documentation>Find a language ISO code based on the passed language name</documentation>
      <input message="tns:LanguageISOCodeSoapRequest"/>
      <output message="tns:LanguageISOCodeSoapResponse"/>
    </operation>
  </portType>
  <binding name="CountryInfoServiceSoapBinding" type="tns:CountryInfoServiceSoapType">
    <soap:binding style="document" transport="http://schemas.xmlsoap.org/soap/http"/>
    <operation name="ListOfContinentsByName">
      <soap:operation soapAction="" style="document"/>
      <input>
        <soap:body use="literal"/>
      </input>
      <output>
        <soap:body use="literal"/>
      </output>
    </operation>
    <operation name="ListOfContinentsByCode">
      <soap:operation soapAction="" style="document"/>
      <input>
        <soap:body use="literal"/>
      </input>
      <output>
        <soap:body use="literal"/>
      </output>
    </operation>
    <operation name="ListOfCurrenciesByName">
      <soap:operation soapAction="" style="document"/>
      <input>
        <soap:body use="literal"/>
      </input>
      <output>
        <soap:body use="literal"/>
      </output>
    </operation>
    <operation name="ListOfCurrenciesByCode">
      <soap:operation soapAction="" style="document"/>
      <input>
        <soap:body use="literal"/>
      </input>
      <output>
        <soap:body use="literal"/>
      </output>
    </operation>
    <operation name="CurrencyName">
      <soap:operation soapAction="" style="document"/>
      <input>
        <soap:body use="literal"/>
      </input>
      <output>
        <soap:body use="literal"/>
      </output>
    </operation>
    <operation name="ListOfCountryNamesByCode">
      <soap:operation soapAction="" style="document"/>
      <input>
        <soap:body use="literal"/>
      </input>
      <output>
        <soap:body use="literal"/>
      </output>
    </operation>
    <operation name="ListOfCountryNamesByName">
      <soap:operation soapAction="" style="document"/>
      <input>
        <soap:body use="literal"/>
      </input>
      <output>
        <soap:body use="literal"/>
      </output>
    </operation>
    <operation name="ListOfCountryNamesGroupedByContinent">
      <soap:operation soapAction="" style="document"/>
      <input>
        <soap:body use="literal"/>
      </input>
      <output>
        <soap:body use="literal"/>
      </output>
    </operation>
    <operation name="CountryName">
      <soap:operation soapAction="" style="document"/>
      <input>
        <soap:body use="literal"/>
      </input>
      <output>
        <soap:body use="literal"/>
      </output>
    </operation>
    <operation name="CountryISOCode">
      <soap:operation soapAction="" style="document"/>
      <input>
        <soap:body use="literal"/>
      </input>
      <output>
        <soap:body use="literal"/>
      </output>
    </operation>
    <operation name="CapitalCity">
      <soap:operation soapAction="" style="document"/>
      <input>
        <soap:body use="literal"/>
      </input>
      <output>
        <soap:body use="literal"/>
      </output>
    </operation>
    <operation name="CountryCurrency">
      <soap:operation soapAction="" style="document"/>
      <input>
        <soap:body use="literal"/>
      </input>
      <output>
        <soap:body use="literal"/>
      </output>
    </operation>
    <operation name="CountryFlag">
      <soap:operation soapAction="" style="document"/>
      <input>
        <soap:body use="literal"/>
      </input>
      <output>
        <soap:body use="literal"/>
      </output>
    </operation>
    <operation name="CountryIntPhoneCode">
      <soap:operation soapAction="" style="document"/>
      <input>
        <soap:body use="literal"/>
      </input>
      <output>
        <soap:body use="literal"/>
      </output>
    </operation>
    <operation name="FullCountryInfo">
      <soap:operation soapAction="" style="document"/>
      <input>
        <soap:body use="literal"/>
      </input>
      <output>
        <soap:body use="literal"/>
      </output>
    </operation>
    <operation name="FullCountryInfoAllCountries">
      <soap:operation soapAction="" style="document"/>
      <input>
        <soap:body use="literal"/>
      </input>
      <output>
        <soap:body use="literal"/>
      </output>
    </operation>
    <operation name="CountriesUsingCurrency">
      <soap:operation soapAction="" style="document"/>
      <input>
        <soap:body use="literal"/>
      </input>
      <output>
        <soap:body use="literal"/>
      </output>
    </operation>
    <operation name="ListOfLanguagesByName">
      <soap:operation soapAction="" style="document"/>
      <input>
        <soap:body use="literal"/>
      </input>
      <output>
        <soap:body use="literal"/>
      </output>
    </operation>
    <operation name="ListOfLanguagesByCode">
      <soap:operation soapAction="" style="document"/>
      <input>
        <soap:body use="literal"/>
      </input>
      <output>
        <soap:body use="literal"/>
      </output>
    </operation>
    <operation name="LanguageName">
      <soap:operation soapAction="" style="document"/>
      <input>
        <soap:body use="literal"/>
      </input>
      <output>
        <soap:body use="literal"/>
      </output>
    </operation>
    <operation name="LanguageISOCode">
      <soap:operation soapAction="" style="document"/>
      <input>
        <soap:body use="literal"/>
      </input>
      <output>
        <soap:body use="literal"/>
      </output>
    </operation>
  </binding>
  <binding name="CountryInfoServiceSoapBinding12" type="tns:CountryInfoServiceSoapType">
    <soap12:binding style="document" transport="http://schemas.xmlsoap.org/soap/http"/>
    <operation name="ListOfContinentsByName">
      <soap12:operation soapAction="" style="document"/>
      <input>
        <soap12:body use="literal"/>
      </input>
      <output>
        <soap12:body use="literal"/>
      </output>
    </operation>
    <operation name="ListOfContinentsByCode">
      <soap12:operation soapAction="" style="document"/>
      <input>
        <soap12:body use="literal"/>
      </input>
      <output>
        <soap12:body use="literal"/>
      </output>
    </operation>
    <operation name="ListOfCurrenciesByName">
      <soap12:operation soapAction="" style="document"/>
      <input>
        <soap12:body use="literal"/>
      </input>
      <output>
        <soap12:body use="literal"/>
      </output>
    </operation>
    <operation name="ListOfCurrenciesByCode">
      <soap12:operation soapAction="" style="document"/>
      <input>
        <soap12:body use="literal"/>
      </input>
      <output>
        <soap12:body use="literal"/>
      </output>
    </operation>
    <operation name="CurrencyName">
      <soap12:operation soapAction="" style="document"/>
      <input>
        <soap12:body use="literal"/>
      </input>
      <output>
        <soap12:body use="literal"/>
      </output>
    </operation>
    <operation name="ListOfCountryNamesByCode">
      <soap12:operation soapAction="" style="document"/>
      <input>
        <soap12:body use="literal"/>
      </input>
      <output>
        <soap12:body use="literal"/>
      </output>
    </operation>
    <operation name="ListOfCountryNamesByName">
      <soap12:operation soapAction="" style="document"/>
      <input>
        <soap12:body use="literal"/>
      </input>
      <output>
        <soap12:body use="literal"/>
      </output>
    </operation>
    <operation name="ListOfCountryNamesGroupedByContinent">
      <soap12:operation soapAction="" style="document"/>
      <input>
        <soap12:body use="literal"/>
      </input>
      <output>
        <soap12:body use="literal"/>
      </output>
    </operation>
    <operation name="CountryName">
      <soap12:operation soapAction="" style="document"/>
      <input>
        <soap12:body use="literal"/>
      </input>
      <output>
        <soap12:body use="literal"/>
      </output>
    </operation>
    <operation name="CountryISOCode">
      <soap12:operation soapAction="" style="document"/>
      <input>
        <soap12:body use="literal"/>
      </input>
      <output>
        <soap12:body use="literal"/>
      </output>
    </operation>
    <operation name="CapitalCity">
      <soap12:operation soapAction="" style="document"/>
      <input>
        <soap12:body use="literal"/>
      </input>
      <output>
        <soap12:body use="literal"/>
      </output>
    </operation>
    <operation name="CountryCurrency">
      <soap12:operation soapAction="" style="document"/>
      <input>
        <soap12:body use="literal"/>
      </input>
      <output>
        <soap12:body use="literal"/>
      </output>
    </operation>
    <operation name="CountryFlag">
      <soap12:operation soapAction="" style="document"/>
      <input>
        <soap12:body use="literal"/>
      </input>
      <output>
        <soap12:body use="literal"/>
      </output>
    </operation>
    <operation name="CountryIntPhoneCode">
      <soap12:operation soapAction="" style="document"/>
      <input>
        <soap12:body use="literal"/>
      </input>
      <output>
        <soap12:body use="literal"/>
      </output>
    </operation>
    <operation name="FullCountryInfo">
      <soap12:operation soapAction="" style="document"/>
      <input>
        <soap12:body use="literal"/>
      </input>
      <output>
        <soap12:body use="literal"/>
      </output>
    </operation>
    <operation name="FullCountryInfoAllCountries">
      <soap12:operation soapAction="" style="document"/>
      <input>
        <soap12:body use="literal"/>
      </input>
      <output>
        <soap12:body use="literal"/>
      </output>
    </operation>
    <operation name="CountriesUsingCurrency">
      <soap12:operation soapAction="" style="document"/>
      <input>
        <soap12:body use="literal"/>
      </input>
      <output>
        <soap12:body use="literal"/>
      </output>
    </operation>
    <operation name="ListOfLanguagesByName">
      <soap12:operation soapAction="" style="document"/>
      <input>
        <soap12:body use="literal"/>
      </input>
      <output>
        <soap12:body use="literal"/>
      </output>
    </operation>
    <operation name="ListOfLanguagesByCode">
      <soap12:operation soapAction="" style="document"/>
      <input>
        <soap12:body use="literal"/>
      </input>
      <output>
        <soap12:body use="literal"/>
      </output>
    </operation>
    <operation name="LanguageName">
      <soap12:operation soapAction="" style="document"/>
      <input>
        <soap12:body use="literal"/>
      </input>
      <output>
        <soap12:body use="literal"/>
      </output>
    </operation>
    <operation name="LanguageISOCode">
      <soap12:operation soapAction="" style="document"/>
      <input>
        <soap12:body use="literal"/>
      </input>
      <output>
        <soap12:body use="literal"/>
      </output>
    </operation>
  </binding>
  <service name="CountryInfoService">
    <documentation>This DataFlex Web Service opens up country information. 2 letter ISO codes are used for Country code. There are functions to retrieve the used Currency, Language, Capital City, Continent and Telephone code.</documentation>
    <port name="CountryInfoServiceSoap" binding="tns:CountryInfoServiceSoapBinding">
      <soap:address location="http://webservices.oorsprong.org/websamples.countryinfo/CountryInfoService.wso"/>
    </port>
    <port name="CountryInfoServiceSoap12" binding="tns:CountryInfoServiceSoapBinding12">
      <soap12:address location="http://webservices.oorsprong.org/websamples.countryinfo/CountryInfoService.wso"/>
    </port>
  </service>
</definitions>]]></con:content><con:type>http://schemas.xmlsoap.org/wsdl/</con:type></con:part></con:definitionCache><con:endpoints><con:endpoint>http://webservices.oorsprong.org/websamples.countryinfo/CountryInfoService.wso</con:endpoint></con:endpoints><con:operation id="755e3f56-495c-45e9-a151-7e33a6ac0eef" isOneWay="false" action="" name="CapitalCity" bindingOperationName="CapitalCity" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="6b307057-753d-4f7a-9606-9b2f49aba7a8" name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://webservices.oorsprong.org/websamples.countryinfo/CountryInfoService.wso</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:web="http://www.oorsprong.org/websamples.countryinfo">\r
   <soapenv:Header/>\r
   <soapenv:Body>\r
      <web:CapitalCity>\r
         <web:sCountryISOCode>?</web:sCountryISOCode>\r
      </web:CapitalCity>\r
   </soapenv:Body>\r
</soapenv:Envelope>]]></con:request><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://www.oorsprong.org/websamples.countryinfo/CountryInfoServiceSoapType/CapitalCityRequest"/></con:call></con:operation><con:operation id="f252a005-e68d-4343-b7d0-4401b64d2cd0" isOneWay="false" action="" name="CountriesUsingCurrency" bindingOperationName="CountriesUsingCurrency" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="b093782f-d92a-43c0-9c48-9193efe436a9" name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://webservices.oorsprong.org/websamples.countryinfo/CountryInfoService.wso</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:web="http://www.oorsprong.org/websamples.countryinfo">\r
   <soapenv:Header/>\r
   <soapenv:Body>\r
      <web:CountriesUsingCurrency>\r
         <web:sISOCurrencyCode>?</web:sISOCurrencyCode>\r
      </web:CountriesUsingCurrency>\r
   </soapenv:Body>\r
</soapenv:Envelope>]]></con:request><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://www.oorsprong.org/websamples.countryinfo/CountryInfoServiceSoapType/CountriesUsingCurrencyRequest"/></con:call></con:operation><con:operation id="12eb81a7-c1f7-41ab-917e-08229906ec0a" isOneWay="false" action="" name="CountryCurrency" bindingOperationName="CountryCurrency" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="1508c64d-071f-4fd8-a1a3-d65115b16685" name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://webservices.oorsprong.org/websamples.countryinfo/CountryInfoService.wso</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:web="http://www.oorsprong.org/websamples.countryinfo">\r
   <soapenv:Header/>\r
   <soapenv:Body>\r
      <web:CountryCurrency>\r
         <web:sCountryISOCode>?</web:sCountryISOCode>\r
      </web:CountryCurrency>\r
   </soapenv:Body>\r
</soapenv:Envelope>]]></con:request><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://www.oorsprong.org/websamples.countryinfo/CountryInfoServiceSoapType/CountryCurrencyRequest"/></con:call></con:operation><con:operation id="03d531ad-e7b2-4b83-8f75-a06187f0bb1e" isOneWay="false" action="" name="CountryFlag" bindingOperationName="CountryFlag" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="aa5cc258-8be2-4d3b-84d9-55bacccf2ed7" name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://webservices.oorsprong.org/websamples.countryinfo/CountryInfoService.wso</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:web="http://www.oorsprong.org/websamples.countryinfo">\r
   <soapenv:Header/>\r
   <soapenv:Body>\r
      <web:CountryFlag>\r
         <web:sCountryISOCode>?</web:sCountryISOCode>\r
      </web:CountryFlag>\r
   </soapenv:Body>\r
</soapenv:Envelope>]]></con:request><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://www.oorsprong.org/websamples.countryinfo/CountryInfoServiceSoapType/CountryFlagRequest"/></con:call></con:operation><con:operation id="dfaa1919-4c4c-4b19-a01d-aaa68818553f" isOneWay="false" action="" name="CountryIntPhoneCode" bindingOperationName="CountryIntPhoneCode" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="e508d27e-f542-4746-a460-b82a55e9a865" name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://webservices.oorsprong.org/websamples.countryinfo/CountryInfoService.wso</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:web="http://www.oorsprong.org/websamples.countryinfo">\r
   <soapenv:Header/>\r
   <soapenv:Body>\r
      <web:CountryIntPhoneCode>\r
         <web:sCountryISOCode>?</web:sCountryISOCode>\r
      </web:CountryIntPhoneCode>\r
   </soapenv:Body>\r
</soapenv:Envelope>]]></con:request><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://www.oorsprong.org/websamples.countryinfo/CountryInfoServiceSoapType/CountryIntPhoneCodeRequest"/></con:call></con:operation><con:operation id="da54f743-2481-4459-adb2-0d1579f64590" isOneWay="false" action="" name="CountryISOCode" bindingOperationName="CountryISOCode" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="c0235d13-1841-463c-86de-58fd3c93cc03" name="Request 1"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://webservices.oorsprong.org/websamples.countryinfo/CountryInfoService.wso</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:web="http://www.oorsprong.org/websamples.countryinfo">\r
   <soapenv:Header/>\r
   <soapenv:Body>\r
      <web:CountryISOCode>\r
         <web:sCountryName>Algeria</web:sCountryName>\r
      </web:CountryISOCode>\r
   </soapenv:Body>\r
</soapenv:Envelope>]]></con:request><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://www.oorsprong.org/websamples.countryinfo/CountryInfoServiceSoapType/CountryISOCodeRequest"/><con:wsrmConfig version="1.2"/></con:call></con:operation><con:operation id="3a5e6f28-0692-4f3a-9a74-6f305ad9061b" isOneWay="false" action="" name="CountryName" bindingOperationName="CountryName" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="a208d1bb-2420-4f19-82a9-a39fdb64b8bc" name="Request 1"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://webservices.oorsprong.org/websamples.countryinfo/CountryInfoService.wso</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:web="http://www.oorsprong.org/websamples.countryinfo">\r
   <soapenv:Header/>\r
   <soapenv:Body>\r
      <web:CountryName>\r
         <web:sCountryISOCode>GBR</web:sCountryISOCode>\r
      </web:CountryName>\r
   </soapenv:Body>\r
</soapenv:Envelope>]]></con:request><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://www.oorsprong.org/websamples.countryinfo/CountryInfoServiceSoapType/CountryNameRequest"/><con:wsrmConfig version="1.2"/></con:call></con:operation><con:operation id="cf31d4fc-a7d7-4518-900c-25e171333081" isOneWay="false" action="" name="CurrencyName" bindingOperationName="CurrencyName" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="b68f404b-01aa-4253-8a0e-13e2483141e3" name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://webservices.oorsprong.org/websamples.countryinfo/CountryInfoService.wso</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:web="http://www.oorsprong.org/websamples.countryinfo">\r
   <soapenv:Header/>\r
   <soapenv:Body>\r
      <web:CurrencyName>\r
         <web:sCurrencyISOCode>?</web:sCurrencyISOCode>\r
      </web:CurrencyName>\r
   </soapenv:Body>\r
</soapenv:Envelope>]]></con:request><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://www.oorsprong.org/websamples.countryinfo/CountryInfoServiceSoapType/CurrencyNameRequest"/></con:call></con:operation><con:operation id="68c85813-8fac-45f0-b5c9-af34b89ed8ae" isOneWay="false" action="" name="FullCountryInfo" bindingOperationName="FullCountryInfo" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="693241fc-9398-4e62-a18d-de1da04414c8" name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://webservices.oorsprong.org/websamples.countryinfo/CountryInfoService.wso</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:web="http://www.oorsprong.org/websamples.countryinfo">\r
   <soapenv:Header/>\r
   <soapenv:Body>\r
      <web:FullCountryInfo>\r
         <web:sCountryISOCode>?</web:sCountryISOCode>\r
      </web:FullCountryInfo>\r
   </soapenv:Body>\r
</soapenv:Envelope>]]></con:request><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://www.oorsprong.org/websamples.countryinfo/CountryInfoServiceSoapType/FullCountryInfoRequest"/></con:call></con:operation><con:operation id="e8feef32-ad7f-4687-a872-0069d15c6248" isOneWay="false" action="" name="FullCountryInfoAllCountries" bindingOperationName="FullCountryInfoAllCountries" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="fe3c31b5-f1c7-4068-a23e-234511aeb8f6" name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://webservices.oorsprong.org/websamples.countryinfo/CountryInfoService.wso</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:web="http://www.oorsprong.org/websamples.countryinfo">\r
   <soapenv:Header/>\r
   <soapenv:Body>\r
      <web:FullCountryInfoAllCountries/>\r
   </soapenv:Body>\r
</soapenv:Envelope>]]></con:request><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://www.oorsprong.org/websamples.countryinfo/CountryInfoServiceSoapType/FullCountryInfoAllCountriesRequest"/></con:call></con:operation><con:operation id="5cf40a48-3dce-4617-a60e-c61ad4b154b2" isOneWay="false" action="" name="LanguageISOCode" bindingOperationName="LanguageISOCode" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="5848d58e-8ccb-49ac-b97b-8082f54ca066" name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://webservices.oorsprong.org/websamples.countryinfo/CountryInfoService.wso</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:web="http://www.oorsprong.org/websamples.countryinfo">\r
   <soapenv:Header/>\r
   <soapenv:Body>\r
      <web:LanguageISOCode>\r
         <web:sLanguageName>?</web:sLanguageName>\r
      </web:LanguageISOCode>\r
   </soapenv:Body>\r
</soapenv:Envelope>]]></con:request><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://www.oorsprong.org/websamples.countryinfo/CountryInfoServiceSoapType/LanguageISOCodeRequest"/></con:call></con:operation><con:operation id="ca0baef7-cad9-48c4-84b0-4508b0a46dad" isOneWay="false" action="" name="LanguageName" bindingOperationName="LanguageName" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="7c0a75d8-fe4f-42f2-9328-51686e05e80f" name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://webservices.oorsprong.org/websamples.countryinfo/CountryInfoService.wso</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:web="http://www.oorsprong.org/websamples.countryinfo">\r
   <soapenv:Header/>\r
   <soapenv:Body>\r
      <web:LanguageName>\r
         <web:sISOCode>?</web:sISOCode>\r
      </web:LanguageName>\r
   </soapenv:Body>\r
</soapenv:Envelope>]]></con:request><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://www.oorsprong.org/websamples.countryinfo/CountryInfoServiceSoapType/LanguageNameRequest"/></con:call></con:operation><con:operation id="43496342-d757-4f9a-84dc-05b29bab9f5f" isOneWay="false" action="" name="ListOfContinentsByCode" bindingOperationName="ListOfContinentsByCode" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="36c84dfa-c33f-41c8-959d-2975b5b65835" name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://webservices.oorsprong.org/websamples.countryinfo/CountryInfoService.wso</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:web="http://www.oorsprong.org/websamples.countryinfo">\r
   <soapenv:Header/>\r
   <soapenv:Body>\r
      <web:ListOfContinentsByCode/>\r
   </soapenv:Body>\r
</soapenv:Envelope>]]></con:request><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://www.oorsprong.org/websamples.countryinfo/CountryInfoServiceSoapType/ListOfContinentsByCodeRequest"/></con:call></con:operation><con:operation id="76b5d0fc-bef4-410a-a091-7c19ae68f6aa" isOneWay="false" action="" name="ListOfContinentsByName" bindingOperationName="ListOfContinentsByName" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="01545982-aa3b-4efc-abf1-9bc33ccd9bdd" name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://webservices.oorsprong.org/websamples.countryinfo/CountryInfoService.wso</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:web="http://www.oorsprong.org/websamples.countryinfo">\r
   <soapenv:Header/>\r
   <soapenv:Body>\r
      <web:ListOfContinentsByName/>\r
   </soapenv:Body>\r
</soapenv:Envelope>]]></con:request><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://www.oorsprong.org/websamples.countryinfo/CountryInfoServiceSoapType/ListOfContinentsByNameRequest"/></con:call></con:operation><con:operation id="fba46875-64b7-4886-8d24-bd54c1a33250" isOneWay="false" action="" name="ListOfCountryNamesByCode" bindingOperationName="ListOfCountryNamesByCode" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="71146e88-4bf2-4083-91fc-93cde89c0d71" name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://webservices.oorsprong.org/websamples.countryinfo/CountryInfoService.wso</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:web="http://www.oorsprong.org/websamples.countryinfo">\r
   <soapenv:Header/>\r
   <soapenv:Body>\r
      <web:ListOfCountryNamesByCode/>\r
   </soapenv:Body>\r
</soapenv:Envelope>]]></con:request><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://www.oorsprong.org/websamples.countryinfo/CountryInfoServiceSoapType/ListOfCountryNamesByCodeRequest"/></con:call></con:operation><con:operation id="412e48a8-74fa-432b-bc4a-5224f49e833b" isOneWay="false" action="" name="ListOfCountryNamesByName" bindingOperationName="ListOfCountryNamesByName" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="a864738b-9f3f-4b1e-b735-2ea0cccaeb2d" name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://webservices.oorsprong.org/websamples.countryinfo/CountryInfoService.wso</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:web="http://www.oorsprong.org/websamples.countryinfo">\r
   <soapenv:Header/>\r
   <soapenv:Body>\r
      <web:ListOfCountryNamesByName/>\r
   </soapenv:Body>\r
</soapenv:Envelope>]]></con:request><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://www.oorsprong.org/websamples.countryinfo/CountryInfoServiceSoapType/ListOfCountryNamesByNameRequest"/></con:call></con:operation><con:operation id="d23cf7f9-6059-44dc-ae52-9ca18acc949b" isOneWay="false" action="" name="ListOfCountryNamesGroupedByContinent" bindingOperationName="ListOfCountryNamesGroupedByContinent" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="1821e018-4c08-4edd-a1f6-9aaa04bf4453" name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://webservices.oorsprong.org/websamples.countryinfo/CountryInfoService.wso</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:web="http://www.oorsprong.org/websamples.countryinfo">\r
   <soapenv:Header/>\r
   <soapenv:Body>\r
      <web:ListOfCountryNamesGroupedByContinent/>\r
   </soapenv:Body>\r
</soapenv:Envelope>]]></con:request><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://www.oorsprong.org/websamples.countryinfo/CountryInfoServiceSoapType/ListOfCountryNamesGroupedByContinentRequest"/></con:call></con:operation><con:operation id="7bb0e046-c6b4-4091-a53b-b8b8b145822f" isOneWay="false" action="" name="ListOfCurrenciesByCode" bindingOperationName="ListOfCurrenciesByCode" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="062d17a4-973f-46a4-8d39-c6e780d84130" name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://webservices.oorsprong.org/websamples.countryinfo/CountryInfoService.wso</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:web="http://www.oorsprong.org/websamples.countryinfo">\r
   <soapenv:Header/>\r
   <soapenv:Body>\r
      <web:ListOfCurrenciesByCode/>\r
   </soapenv:Body>\r
</soapenv:Envelope>]]></con:request><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://www.oorsprong.org/websamples.countryinfo/CountryInfoServiceSoapType/ListOfCurrenciesByCodeRequest"/></con:call></con:operation><con:operation id="69c4dcb5-c133-4ab3-b647-3131555331c2" isOneWay="false" action="" name="ListOfCurrenciesByName" bindingOperationName="ListOfCurrenciesByName" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="ada6edc3-0f18-40df-ae49-7d202a7ccf2b" name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://webservices.oorsprong.org/websamples.countryinfo/CountryInfoService.wso</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:web="http://www.oorsprong.org/websamples.countryinfo">\r
   <soapenv:Header/>\r
   <soapenv:Body>\r
      <web:ListOfCurrenciesByName/>\r
   </soapenv:Body>\r
</soapenv:Envelope>]]></con:request><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://www.oorsprong.org/websamples.countryinfo/CountryInfoServiceSoapType/ListOfCurrenciesByNameRequest"/></con:call></con:operation><con:operation id="7f25a9e4-7e2e-4866-ba4c-daaf862a14cd" isOneWay="false" action="" name="ListOfLanguagesByCode" bindingOperationName="ListOfLanguagesByCode" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="e4eea2d8-d6e7-4470-b913-bf24d8446838" name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://webservices.oorsprong.org/websamples.countryinfo/CountryInfoService.wso</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:web="http://www.oorsprong.org/websamples.countryinfo">\r
   <soapenv:Header/>\r
   <soapenv:Body>\r
      <web:ListOfLanguagesByCode/>\r
   </soapenv:Body>\r
</soapenv:Envelope>]]></con:request><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://www.oorsprong.org/websamples.countryinfo/CountryInfoServiceSoapType/ListOfLanguagesByCodeRequest"/></con:call></con:operation><con:operation id="e3c19ac3-cc4a-4a6f-b30c-6d7397901d98" isOneWay="false" action="" name="ListOfLanguagesByName" bindingOperationName="ListOfLanguagesByName" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="c7129a05-5c7f-4eb1-a91d-7f0b33bd08cb" name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://webservices.oorsprong.org/websamples.countryinfo/CountryInfoService.wso</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:web="http://www.oorsprong.org/websamples.countryinfo">\r
   <soapenv:Header/>\r
   <soapenv:Body>\r
      <web:ListOfLanguagesByName/>\r
   </soapenv:Body>\r
</soapenv:Envelope>]]></con:request><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://www.oorsprong.org/websamples.countryinfo/CountryInfoServiceSoapType/ListOfLanguagesByNameRequest"/></con:call></con:operation></con:interface><con:testSuite id="31e45d4f-15e8-4976-97a8-b4277fe0f8be" name="TestSuite"><con:description>Test Case 1
Request 1 – a request to return a country ISO code using the country name:
Request2 – a request to return a country currency using the country ISO code

Test Case 2
Request 1 – a request to return a language ISO code using the language name
Request2 - a request to return a language name using the languageISO code 

Test Case 3
Test error scenarios on  CountryCurrency Request
</con:description><con:settings/><con:runType>SEQUENTIAL</con:runType><con:testCase id="e8115712-37b1-456a-ae2e-fb6b174b1afe" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TestCase 1" searchProperties="true"><con:description>Test Case 1
Request 1 –This will return a country ISO code using the country name which is stored in testCase custom Properties and following assertions have been applied
-Assert httpStatusCode is 200
-Assert country ISO code result exists
-Assert Country ISO Code Result value is in Upper Case and length is min 2
-Assert value country ISO code
-SoapUI inbuilt assertions - SOAP Response-VALID, Schema Compliance-VALID, Not SOAP Fault - VALID, Invalid HTTP Status Code-VALID (204,400,401,403,404,503)

Request2 – This will return a country currency using the country ISO code  and Get Data property request has been used to get the ISO code from Request1 and following assertions have been applied
-Assert httpStatusCode is 200
-Assert country currency result exists
-Assert country currency value
-Assert ISO currency Code 
-Assert Country Currency Code is in Upper Case and length is min 3
-Assert Currency Name is in alphabet
-SoapUI inbuilt assertions - SOAP Response-VALID, Schema Compliance-VALID, Not SOAP Fault - VALID, Invalid HTTP Status Code-VALID (204,400,401,403,404,503)
</con:description><con:settings/><con:testStep type="request" name="CountryISOCodeRequest" id="d7bea531-44ea-4db2-baad-4bac40ac2e64"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>CountryInfoServiceSoapBinding12</con:interface><con:operation>CountryISOCode</con:operation><con:request name="CountryISOCodeRequest" id="fce14ad4-044f-4d7b-942b-e8c565978b5a"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#testEndPoint}</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope" xmlns:web="http://www.oorsprong.org/websamples.countryinfo">
   <soap:Header/>
   <soap:Body>
      <web:CountryISOCode>
         <web:sCountryName>Algeria</web:sCountryName>
      </web:CountryISOCode>
   </soap:Body>
</soap:Envelope>]]></con:request><con:assertion type="SOAP Response" id="e7f718ed-1b90-46d7-9950-ae91164576ad"/><con:assertion type="Schema Compliance" id="6979dd08-829e-41ba-8445-1dcbb2d0d9d3" name="Schema Compliance"><con:configuration><definition/></con:configuration></con:assertion><con:assertion type="Invalid HTTP Status Codes" id="f5e17006-a6e3-489d-827b-7fc6b5321acf" name="Invalid HTTP Status Codes"><con:configuration><codes>204,400,401,403,404,500,503</codes></con:configuration></con:assertion><con:assertion type="SOAP Fault Assertion" id="bda3ff9e-89ae-4462-99ee-a858139f4db8" name="Not SOAP Fault"/><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="groovy" name="Request 1" id="b46fadc1-7bda-45b4-9265-df3f7160607a"><con:settings/><con:config><script>import com.eviware.soapui.support.XmlHolder
import com.eviware.soapui.support.GroovyUtils


//Defining xpath for CountryISOCodeResult
String xPathCountryISOCodeResult=context.expand('${#TestCase#xPathCountryISOCodeResult}')

//Defining project
def testProject=testRunner.testCase.testSuite.project
//Defining testStep
def testStep=testProject.getTestSuiteByName("TestSuite").getTestCaseByName("TestCase 1").getTestStepByName(context.expand('${#TestCase#ISOCodeStepName}'))

//Getting the country name from TestCase property
String CountryName=testProject.getTestSuiteByName("TestSuite").getTestCaseByName("TestCase 1").getPropertyValue("countryName")

//Fetching Request property from custom properties of CountryISOCodeRequest
def req=context.expand('${CountryISOCodeRequest#Request}')

//Creating object of XmlHolder
def reqXmlhol=new XmlHolder(req)

//Setting the country name in the request
reqXmlhol.setNodeValue("//web:sCountryName",CountryName)

//Set the amended xml
def newXml=reqXmlhol.getXml()

//replacing with ammended xml
testStep.setPropertyValue("Request",newXml)

//Running the test step
testStep.run(testRunner,context)

//Fetching the response (can also be fetched by context)
def resp=testStep.getPropertyValue("Response")

//Creating instance of XmlHolder for response
def respXmlHolder=new XmlHolder(resp)

//Creating instance of GroovyUtils
def groovyUtils = new GroovyUtils(context)
def httpResponseHeaders = context.testCase.testSteps["CountryISOCodeRequest"].testRequest.response.responseHeaders
def httpStatus = httpResponseHeaders["#status#"]
String actualHttpStatusCode = (httpStatus =~ "[1-5]\\d\\d")[0]

//Verifying httpStatusCode is 200
String exptStatusHttpStatusCode=testProject.getTestSuiteByName("TestSuite").getPropertyValue("exptStatusHttpStatusCode")
assert exptStatusHttpStatusCode==actualHttpStatusCode,"$actualHttpStatusCode - actual http status code is not equal to expected status code - $exptStatusHttpStatusCode "
log.info("HTTP status code: " + actualHttpStatusCode)

//Verifying if Content type is Soap XML
String contentType = httpResponseHeaders["Content-Type"]
def actualContentType=contentType.split(";")[0].split("/")[1]
log.info("Actual response content type: " + actualContentType)
String exptContentType=testProject.getTestSuiteByName("TestSuite").getPropertyValue("exptContentType")
assert exptContentType==actualContentType,"$actualContentType - actual Content type of response is not equal to expected content response - $exptContentType "


//Check if Country ISO Code Result exists and there is just one node
def countryISOCodeResultNode=respXmlHolder.getNodeValues(xPathCountryISOCodeResult)
int noOfCountryISOCodeResultNode=countryISOCodeResultNode.length
log.info "Number of CountryISOCodeResultNode is :$noOfCountryISOCodeResultNode"
assert noOfCountryISOCodeResultNode==1,"Country ISO Code Result does not exist in response xml as number of node is: $noOfCountryISOCodeResultNode"


//Check if Country ISO Code Result value is in UpperCase and length is min 2
String countryISOCode= respXmlHolder.getNodeValue("//m:CountryISOCodeResult")
boolean isUpperCaseOfTwo=countryISOCode.matches("[A-Z]{1,2}")	
assert isUpperCaseOfTwo==true,"$countryISOCode :Country ISO Code Result is NOT in either upperCase or two characters length"

//Check if Country ISO Code Result is equal to expected value
String exptCountryISOCodeResult=testProject.getTestSuiteByName("TestSuite").getTestCaseByName("TestCase 1").getPropertyValue("exptCountryISOCodeResult") 
String actCountryISOCodeResult=respXmlHolder.getNodeValue(xPathCountryISOCodeResult)
log.info "Actual country ISO code is : $actCountryISOCodeResult"
assert exptCountryISOCodeResult==actCountryISOCodeResult,"$exptCountryISOCodeResult - expected Country ISO is not equal to actual Country ISO Code -$actCountryISOCodeResult"













</script></con:config></con:testStep><con:testStep type="request" name="CountryCurrencyRequest" id="e855e0ff-5da8-4011-af1a-17f20bf006a0"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>CountryInfoServiceSoapBinding12</con:interface><con:operation>CountryCurrency</con:operation><con:request name="CountryCurrencyRequest" id="e4b91c8a-5395-4047-9c5f-0ad25c33d5a0"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#testEndPoint}</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope" xmlns:web="http://www.oorsprong.org/websamples.countryinfo">
   <soap:Header/>
   <soap:Body>
      <web:CountryCurrency>
         <web:sCountryISOCode>DZ</web:sCountryISOCode>
      </web:CountryCurrency>
   </soap:Body>
</soap:Envelope>]]></con:request><con:assertion type="SOAP Response" id="f41347ed-a8ad-42fb-ba24-2e8fae99b2db"/><con:assertion type="Invalid HTTP Status Codes" id="cc0564c7-a443-46b3-b1cd-54fdacdf2489" name="Invalid HTTP Status Codes"><con:configuration><codes>204,400,401,403,404,500,503</codes></con:configuration></con:assertion><con:assertion type="Schema Compliance" id="93459705-8b32-4283-8232-c1c5d1144c70" name="Schema Compliance"><con:configuration><definition/></con:configuration></con:assertion><con:assertion type="SOAP Fault Assertion" id="992457e6-c532-4880-bfea-fbd8762db228" name="Not SOAP Fault"/><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="groovy" name="Request 2" id="bed86c53-b4da-4ec3-90fb-326d891dda0d"><con:settings/><con:config><script>import com.eviware.soapui.support.XmlHolder
import com.eviware.soapui.support.GroovyUtils

//Defining project
def testProject=testRunner.testCase.testSuite.project

//Defining testStep
def testStep=testProject.getTestSuiteByName("TestSuite").getTestCaseByName("TestCase 1").getTestStepByName(context.expand('${#TestCase#currencyStepName}'))

//Fetching the Response property from custom properties of CountryISOCodeRequest using GetData
def ISOCodeResp=context.expand('${CountryISOCodeRequest#Response}')

//Creating object of XmlHolder
def respXmlhol=new XmlHolder(ISOCodeResp)

//Getting CountryISOCodeResult from response Xml
String countryISOCodeResult=respXmlhol.getNodeValue(context.expand('${#TestCase#xPathCountryISOCodeResult}'))
log.info countryISOCodeResult

//Fetching the Request property from custom properties of CountryCurrencyRequest
def request=context.expand('${CountryCurrencyRequest#Request}')

//Creating object of XmlHolder
def reqXmlhol=new XmlHolder(request)

//Updating CountryISOCode node value in request xml with ISO code fetched from response1
reqXmlhol.setNodeValue("//web:sCountryISOCode",countryISOCodeResult)

//Set the amended xml
def newXml=reqXmlhol.getXml()

//replacing with ammended xml
testStep.setPropertyValue("Request",newXml)

//Running the test step
testStep.run(testRunner,context)

//Fetching the Response property from custom properties of CountryCurrencyRequest
def currencyResponse=context.expand('${CountryCurrencyRequest#Response}')

//Creating object of XmlHolder
def CurrencyRespXmlhol=new XmlHolder(currencyResponse)

//Creating instance of GroovyUtils
def groovyUtils = new GroovyUtils(context)
def httpResponseHeaders = context.testCase.testSteps["CountryCurrencyRequest"].testRequest.response.responseHeaders
def httpStatus = httpResponseHeaders["#status#"]
String actualHttpStatusCode = (httpStatus =~ "[1-5]\\d\\d")[0]

//Verifying httpStatusCode is 200
String exptStatusHttpStatusCode=testProject.getTestSuiteByName("TestSuite").getPropertyValue("exptStatusHttpStatusCode")
assert actualHttpStatusCode==exptStatusHttpStatusCode,"$actualHttpStatusCode - actual http status code is not equal to expected status code - $exptStatusHttpStatusCode "
log.info("HTTP status code: " + actualHttpStatusCode)

//Verifying if Content type is Soap XML
String contentType = httpResponseHeaders["Content-Type"]
def actualContentType=contentType.split(";")[0].split("/")[1]
log.info("Actual response content type: " + actualContentType)
String exptContentType=testProject.getTestSuiteByName("TestSuite").getPropertyValue("exptContentType")
assert exptContentType==actualContentType,"$actualContentType - actual Content type of response is not equal to expected content response - $exptContentType "

//Check if country currency result exists and there is just one node
def countryCurrencyResultNode=CurrencyRespXmlhol.getNodeValues("//m:CountryCurrencyResult")
int noCountryCurrencyResultNode=countryCurrencyResultNode.length
log.info "Number of CountryCurrencyResultNode is :$noCountryCurrencyResultNode"
assert noCountryCurrencyResultNode==1,"Country Currency Result does not exist in response xml as number of node is: $CountryCurrencyResultNode"

//Check if ISO Currency Code Result value is in UpperCase and length is min 3
String ISOCurrencyCode=CurrencyRespXmlhol.getNodeValue("//m:sISOCode")
boolean isISOCurrencyCodeOfThree=ISOCurrencyCode.matches("[A-Z]{1,3}")	
assert isISOCurrencyCodeOfThree==true,"Country ISO Currency Code Result is NOT in either upperCase or three characters length"

//Check if ISO currency Code is equal to expected value
String exptISOCode=testProject.getTestSuiteByName("TestSuite").getTestCaseByName("TestCase 1").getPropertyValue("exptISOCode") 
String actISOCode=CurrencyRespXmlhol.getNodeValue("//m:sISOCode")
log.info "Actual country ISO currency code is : $actISOCode"
assert exptISOCode==actISOCode,"$exptISOCode - expected Country ISO currency code is not equal to actual Country ISO currency Code -$actISOCode"

//Check if Currency Name is in alphabet
String currencyName=CurrencyRespXmlhol.getNodeValue("//m:sName")
boolean isCurrencyNameInAlphabet=currencyName.matches("[a-zA-Z\\s]*")	
assert isCurrencyNameInAlphabet==true,"Currency Name is not in Alphabet"

//Check if Currency Name is equal to expected value
String exptCurrencyName=testProject.getTestSuiteByName("TestSuite").getTestCaseByName("TestCase 1").getPropertyValue("exptCurrencyName") 
String actCurrencyName=CurrencyRespXmlhol.getNodeValue("//m:sName")
log.info "Actual currency name is : $actCurrencyName"
assert exptCurrencyName==actCurrencyName,"$exptCurrencyName - expected Currency name is not equal to actual currency name -$actCurrencyName"













</script></con:config></con:testStep><con:properties><con:property><con:name>countryName</con:name><con:value>Algeria</con:value></con:property><con:property><con:name>ISOCodeStepName</con:name><con:value>CountryISOCodeRequest</con:value></con:property><con:property><con:name>exptCountryISOCodeResult</con:name><con:value>DZ</con:value></con:property><con:property><con:name>xPathCountryISOCodeResult</con:name><con:value>//m:CountryISOCodeResult</con:value></con:property><con:property><con:name>currencyStepName</con:name><con:value>CountryCurrencyRequest</con:value></con:property><con:property><con:name>exptISOCode</con:name><con:value>DZD</con:value></con:property><con:property><con:name>exptCurrencyName</con:name><con:value>Algeria Dinars</con:value></con:property></con:properties></con:testCase><con:testCase id="2941484a-0167-4a88-801e-4f4bf128d296" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TestCase 2" searchProperties="true"><con:description>Test Case 2
Request 1 – This will return a language ISO code using the language name which is stored in custom properties of Test Case and following assertions have been applied
-Assert httpStatusCode is 200
-Assert language ISO code result exists
-Assert Language ISO Code Result value is in lower Case and length is min 2
-Assert language ISO code value
-SoapUI inbuilt assertions - SOAP Response-VALID, Schema Compliance-VALID, Not SOAP Fault - VALID, Invalid HTTP Status Code-VALID (204,400,401,403,404,503)

Request2 - This will return a language name using the languageISO code  which gets available by using a Property Transfer Step from Request1 and following assertions have been applied
-Assert httpStatusCode is 200
-Assert language name result exists
-Assert language name value
-Assert Language Name Result value is in alphabet
-SoapUI inbuilt assertions - SOAP Response-VALID, Schema Compliance-VALID, Not SOAP Fault - VALID, Invalid HTTP Status Code-VALID (204,400,401,403,404,503)
</con:description><con:settings/><con:testStep type="request" name="LanguageISOCodeRequest" id="8e83fe48-59a2-4170-9d4a-98b5a3fee84f"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>CountryInfoServiceSoapBinding12</con:interface><con:operation>LanguageISOCode</con:operation><con:request name="LanguageISOCodeRequest" id="b1a1cd75-339d-4c31-b786-7b2b41a788e6"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#testEndPoint}</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope" xmlns:web="http://www.oorsprong.org/websamples.countryinfo">
   <soap:Header/>
   <soap:Body>
      <web:LanguageISOCode>
         <web:sLanguageName>${#TestCase#languageName}</web:sLanguageName>
      </web:LanguageISOCode>
   </soap:Body>
</soap:Envelope>]]></con:request><con:assertion type="SOAP Response" id="a4f7eac8-70bb-489e-af3c-37bcfbbe2f9b"/><con:assertion type="Schema Compliance" id="6b1a2694-5670-4484-bbb4-decdcf5eb8df"><con:configuration/></con:assertion><con:assertion type="SOAP Fault Assertion" id="5d9e2cd2-66c5-43ad-8623-f9d24aebf958"/><con:assertion type="Invalid HTTP Status Codes" id="f3aa603f-4a22-416f-b2d9-3647fdb26d3e" name="Invalid HTTP Status Codes"><con:configuration><codes>204,400,401,403,404,500,503</codes></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="groovy" name="Request 1" id="d3cf32d5-6ad8-4800-9236-437bfaf8f8d3"><con:settings/><con:config><script>import com.eviware.soapui.support.XmlHolder
import com.eviware.soapui.support.GroovyUtils

/*
 * Inserted Language Name stored in testCase custom properties into LanguageISOCodeRequest (${#TestCase#languageName})
 */

//Defining xpath for CountryISOCodeResult

//Defining project
def testProject=testRunner.testCase.testSuite.project
//Defining testStep
def testStep=testProject.getTestSuiteByName("TestSuite").getTestCaseByName("TestCase 2").getTestStepByName(context.expand('${#TestCase#langISOCodeStepName}'))

//Running the test step
testStep.run(testRunner,context)

//Fetching the response (can also be fetched by context)
def resp=testStep.getPropertyValue("Response")

//Creating instance of XmlHolder for response
def respXmlHolder=new XmlHolder(resp)

//Creating instance of GroovyUtils
def groovyUtils = new GroovyUtils(context)
def httpResponseHeaders = context.testCase.testSteps["LanguageISOCodeRequest"].testRequest.response.responseHeaders
def httpStatus = httpResponseHeaders["#status#"]
String actualHttpStatusCode = (httpStatus =~ "[1-5]\\d\\d")[0]

//Verifying httpStatusCode is 200
String exptStatusHttpStatusCode=testProject.getTestSuiteByName("TestSuite").getPropertyValue("exptStatusHttpStatusCode")
assert actualHttpStatusCode==exptStatusHttpStatusCode,"$actualHttpStatusCode - actual http status code is not equal to expected status code - $exptStatusHttpStatusCode "
log.info("HTTP status code: " + actualHttpStatusCode)

//Verifying if Content type is Soap XML
String contentType = httpResponseHeaders["Content-Type"]
def actualContentType=contentType.split(";")[0].split("/")[1]
log.info("Actual response content type: " + actualContentType)
String exptContentType=testProject.getTestSuiteByName("TestSuite").getPropertyValue("exptContentType")
assert exptContentType==actualContentType,"$actualContentType - actual Content type of response is not equal to expected content response - $exptContentType "


//Check if language ISO code result exists and there is just one node
def languageISOCodeResultNode=respXmlHolder.getNodeValues("//m:LanguageISOCodeResult")
int noOfLanguageISOCodeResultNode=languageISOCodeResultNode.length
log.info "Number of languageISOCodeResultNode is :$noOfLanguageISOCodeResultNode"
assert noOfLanguageISOCodeResultNode==1,"Language ISO Code Result does not exist in response xml as number of node is: $noOfLanguageISOCodeResultNode"

//Check if Language ISO Code Result value is in lowerCase and length is min 2
String languageISOCode=respXmlHolder.getNodeValue("//m:LanguageISOCodeResult")
boolean islanguageISOCodeLC=languageISOCode.matches("[a-z]{1,2}")	
assert islanguageISOCodeLC==true,"$languageISOCode : Language ISO Code Result is NOT in either Lower case or two characters length"

//Check if language ISO code result value is equal to expected value
String exptLanguageISOCodeResult=testProject.getTestSuiteByName("TestSuite").getTestCaseByName("TestCase 2").getPropertyValue("exptLanguageISOCodeResult") 
String actLanguageISOCodeResult=respXmlHolder.getNodeValue("//m:LanguageISOCodeResult")
log.info "Actual Language ISO code is : $actLanguageISOCodeResult"
assert exptLanguageISOCodeResult==actLanguageISOCodeResult,"$exptLanguageISOCodeResult - expected Language ISO Code is not equal to actual Language ISO Code -$actLanguageISOCodeResult"















</script></con:config></con:testStep><con:testStep type="transfer" name="LangISOCode Transfer" id="e0ee7dbb-49f5-476e-b516-c6fc6609a757"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>LanguageISOCode</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>LanguageISOCodeRequest</con:sourceStep><con:sourcePath>declare namespace m='http://www.oorsprong.org/websamples.countryinfo';
//m:LanguageISOCodeResult/text()</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>LanguageNameRequest</con:targetStep><con:targetPath>declare namespace web='http://www.oorsprong.org/websamples.countryinfo';
//web:sISOCode</con:targetPath><con:upgraded>true</con:upgraded></con:transfers></con:config></con:testStep><con:testStep type="request" name="LanguageNameRequest" id="c19fc342-af35-48ed-aab6-bfd7d282ec78"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>CountryInfoServiceSoapBinding12</con:interface><con:operation>LanguageName</con:operation><con:request name="LanguageNameRequest" id="14f1067f-9721-46f6-b399-19fa6f238b0c"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#testEndPoint}</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope" xmlns:web="http://www.oorsprong.org/websamples.countryinfo">
   <soap:Header/>
   <soap:Body>
      <web:LanguageName>
         <web:sISOCode>es</web:sISOCode>
      </web:LanguageName>
   </soap:Body>
</soap:Envelope>]]></con:request><con:assertion type="SOAP Response" id="edb97962-c259-4eb3-b862-8b03db9225fc"/><con:assertion type="Schema Compliance" id="dd1920cb-5702-4757-b91b-76fa220d45b4"><con:configuration/></con:assertion><con:assertion type="SOAP Fault Assertion" id="c2a24f78-3fac-4334-9a20-130689e35365"/><con:assertion type="Invalid HTTP Status Codes" id="3a4b068b-bf1e-4c8d-a724-784b7ad9ae4f" name="Invalid HTTP Status Codes"><con:configuration><codes>204,400,401,403,404,500,503</codes></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="groovy" name="Request 2" id="3c4f335e-76ef-4cbb-81af-4bf8a121fd2f"><con:settings/><con:config><script>import com.eviware.soapui.support.XmlHolder
import com.eviware.soapui.support.GroovyUtils


/*
 * 
 * Property Transfer has been used to transfer the language ISO code from Request1 
 * 
 */


//Defining project
def testProject=testRunner.testCase.testSuite.project

//Defining testStep
def testStep=testProject.getTestSuiteByName("TestSuite").getTestCaseByName("TestCase 2").getTestStepByName("LanguageNameRequest")

//Running the test step
testStep.run(testRunner,context)

//Fetching the response
def resp=testStep.getPropertyValue("Response")

//Creating instance of XmlHolder for response
def respXmlHolder=new XmlHolder(resp)

//Creating instance of GroovyUtils
def groovyUtils = new GroovyUtils(context)
def httpResponseHeaders = context.testCase.testSteps["LanguageNameRequest"].testRequest.response.responseHeaders
def httpStatus = httpResponseHeaders["#status#"]
String actualHttpStatusCode = (httpStatus =~ "[1-5]\\d\\d")[0]

//Check if httpStatusCode is 200
String exptStatusHttpStatusCode=testProject.getTestSuiteByName("TestSuite").getPropertyValue("exptStatusHttpStatusCode")
assert actualHttpStatusCode==exptStatusHttpStatusCode,"$actualHttpStatusCode - : actual http status code is not equal to expected status code: - $exptStatusHttpStatusCode "
log.info("HTTP status code: " + actualHttpStatusCode)

//Verifying if Content type is Soap XML
String contentType = httpResponseHeaders["Content-Type"]
def actualContentType=contentType.split(";")[0].split("/")[1]
log.info("Actual response content type: " + actualContentType)
String exptContentType=testProject.getTestSuiteByName("TestSuite").getPropertyValue("exptContentType")
assert exptContentType==actualContentType,"$actualContentType - actual Content type of response is not equal to expected content response - $exptContentType "


//Check if Language Name Result result exists and there is just one node
def languageNameResultNode=respXmlHolder.getNodeValues("//m:LanguageNameResult")
int noOfLanguageNameResultNode=languageNameResultNode.length
log.info "Number of noOfLanguageNameResultNode is :$noOfLanguageNameResultNode"
assert noOfLanguageNameResultNode==1,"Language Name Result Node does not exist in response xml as number of node is: $noOfLanguageNameResultNode"

//Check if Language Name Result value is alphabet
String languageNameResult=respXmlHolder.getNodeValue("//m:LanguageNameResult")
boolean islanguageInAlpha=languageNameResult.matches("[A-z]*")	
assert islanguageInAlpha==true,"$languageNameResult : Language name is not in Alphabet"

//Check if Language Name Result value is equal to expected value
String exptLanguageNameResult=testProject.getTestSuiteByName("TestSuite").getTestCaseByName("TestCase 2").getPropertyValue("languageName") 
String actLanguageNameResult=respXmlHolder.getNodeValue("//m:LanguageNameResult")
log.info "Actual Language Name is : $exptLanguageNameResult"
assert exptLanguageNameResult==exptLanguageNameResult,"$exptLanguageNameResult - : expected Language Name is not equal to actual Language name : -$exptLanguageNameResult"












</script></con:config></con:testStep><con:properties><con:property><con:name>languageName</con:name><con:value>Spanish</con:value></con:property><con:property><con:name>langISOCodeStepName</con:name><con:value>LanguageISOCodeRequest</con:value></con:property><con:property><con:name>exptLanguageISOCodeResult</con:name><con:value>es</con:value></con:property></con:properties></con:testCase><con:testCase id="6b5400c8-665c-45cc-9e7d-941604a712cd" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TestCase 3" searchProperties="true"><con:description>Test Case 3
This test has following error scenarios for CountryCurrency Request

Scenario 1 :When Blank value is entered as a Country ISO Code
Verifying validation message "Country not found in the database" appears in reponse XML in node value of "m:sName" when a blank Country ISO Code which is stored in custom property of TestCase as "BlankInputAsCountryISOCode" is entered as Country ISO Code in request Xml
 
Scenario 2 :When Country ISO Code is input in Integer
Verifying validation message "Country not found in the database" appears in reponse XML in node value of "m:sName" when an Integer Country ISO Code which is stored in custom property of TestCase as "IntegerInputAsCountryISOCode=12" is entered as Country ISO Code in request Xml

Scenario 3 :When Country ISO Code is input in Special Characters
Verifying validation message "Country not found in the database" appears in reponse XML in node value of "m:sName" when Special Character Country ISO Code which is stored in custom property of TestCase as "SpecialCharInputAsCountryISOCode=$£" is entered as Country ISO Code in request Xml

Scenario 4 :When Country ISO Code is input in Alpha Numeric
Verifying validation message "Country not found in the database" appears in reponse XML in node value of "m:sName" when Alpha Numeric Country ISO Code which is stored in custom property of TestCase as "AlphaNumInputAsCountryISOCode=1n" is entered as Country ISO Code in request Xml

Scenario 5 :When Country ISO Code is input in Random Characters
Verifying validation message "Country not found in the database" appears in reponse XML in node value of "m:sName" when  Random Characters Country ISO Code which is stored in custom property of TestCase as "RandomCharAsCountryISOCode=1n$" is entered as Country ISO Code in request Xml

Scenario 6 :When Country ISO Code is input in Lower Case
Verifying validation message "Country not found in the database" appears in reponse XML in node value of "m:sName" when Lower Case Country ISO Code which is stored in custom property of TestCase as "LowerCaseCountryISOCode=dz" is entered as Country ISO Code in request Xml

Scenario 7 :When Country ISO Code is input in Upper and Lower Case
Verifying validation message "Country not found in the database" appears in reponse XML in node value of "m:sName" when Upper and Lower Case Country ISO Code which is stored in custom property of TestCase as "UpperLowerCaseCountryISOCode=Dz" is entered as Country ISO Code in request Xml

























</con:description><con:settings/><con:testStep type="request" name="CountryCurrencyRequest" id="93c94475-74f0-431d-a9b7-cd8487733e1e"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>CountryInfoServiceSoapBinding12</con:interface><con:operation>CountryCurrency</con:operation><con:request name="CountryCurrencyRequest" id="c573b8e6-9f8b-4cc3-8384-c40f64f8fe22"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#testEndPoint}</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope" xmlns:web="http://www.oorsprong.org/websamples.countryinfo">
   <soap:Header/>
   <soap:Body>
      <web:CountryCurrency>
         <web:sCountryISOCode>Dz</web:sCountryISOCode>
      </web:CountryCurrency>
   </soap:Body>
</soap:Envelope>]]></con:request><con:assertion type="SOAP Response" id="86afff75-7dcb-4da6-9cd5-3bf533ec91f9"/><con:assertion type="Schema Compliance" id="40da4cea-28e2-4ec0-b3a3-749eb536dd6e"><con:configuration/></con:assertion><con:assertion type="SOAP Fault Assertion" id="2b6f9741-b232-4f8f-82e4-93a808d6994d"/><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="groovy" name="BlankInputAsCountryISOCode" id="473d7e91-a4cb-4ecc-a71f-0023d3bef83b"><con:settings/><con:config><script>import com.eviware.soapui.support.XmlHolder

//Defining project
def testProject=testRunner.testCase.testSuite.project
//Defining testStep
def testStep=testProject.getTestSuiteByName("TestSuite").getTestCaseByName("TestCase 3").getTestStepByName("CountryCurrencyRequest")

//Getting the country ISO Code from TestCase property
String blankInputAsCountryISOCode=testProject.getTestSuiteByName("TestSuite").getTestCaseByName("TestCase 3").getPropertyValue("blankInputAsCountryISOCode")

//Fetching Request property from custom properties of CountryCurrencyRequest
def req=context.expand('${CountryCurrencyRequest#Request}')

//Creating object of XmlHolder
def reqXmlhol=new XmlHolder(req)

//Setting the country ISO Code name in the request
reqXmlhol.setNodeValue("//web:sCountryISOCode",blankInputAsCountryISOCode)

//Set the amended xml
def newXml=reqXmlhol.getXml()

//replacing with ammended xml
testStep.setPropertyValue("Request",newXml)

//Running the test step
testStep.run(testRunner,context)

//Fetching the response (can also be fetched by context)
def resp=testStep.getPropertyValue("Response")

//Creating instance of XmlHolder for response
def respXmlHolder=new XmlHolder(resp)


//Check if validation message appears in response for invalid country ISO Code input
String exptInvalidCountryValidationMesg=testProject.getTestSuiteByName("TestSuite").getTestCaseByName("TestCase 3").getPropertyValue("invalidCountryValidationMesg") 
String actInvalidCountryValidationMesg=respXmlHolder.getNodeValue("//m:sName")
log.info "Actual validation message for country ISO Code input as Blank is : $actInvalidCountryValidationMesg"
assert exptInvalidCountryValidationMesg==actInvalidCountryValidationMesg,"$exptInvalidCountryValidationMesg - expected validation message for Country ISO Code input as Blank is not equal to actual message -$actInvalidCountryValidationMesg"














</script></con:config></con:testStep><con:testStep type="groovy" name="IntegerInputAsCountryISOCode" id="0113ebe4-2ac8-47c2-b1f4-a7120ea57115"><con:settings/><con:config><script>import com.eviware.soapui.support.XmlHolder

//Defining project
def testProject=testRunner.testCase.testSuite.project
//Defining testStep
def testStep=testProject.getTestSuiteByName("TestSuite").getTestCaseByName("TestCase 3").getTestStepByName("CountryCurrencyRequest")

//Getting the country Iso Code name from TestCase property
String integerInputAsCountryISOCode=testProject.getTestSuiteByName("TestSuite").getTestCaseByName("TestCase 3").getPropertyValue("integerInputAsCountryISOCode")

//Fetching Request property from custom properties of CountryCurrencyRequest
def req=context.expand('${CountryCurrencyRequest#Request}')

//Creating object of XmlHolder
def reqXmlhol=new XmlHolder(req)

//Setting the country ISO Code in the request
reqXmlhol.setNodeValue("//web:sCountryISOCode",integerInputAsCountryISOCode)

//Set the amended xml
def newXml=reqXmlhol.getXml()

//replacing with ammended xml
testStep.setPropertyValue("Request",newXml)

//Running the test step
testStep.run(testRunner,context)

//Fetching the response (can also be fetched by context)
def resp=testStep.getPropertyValue("Response")

//Creating instance of XmlHolder for response
def respXmlHolder=new XmlHolder(resp)


//Check if validation message appears in response for invalid country ISO Code input
String exptInvalidCountryValidationMesg=testProject.getTestSuiteByName("TestSuite").getTestCaseByName("TestCase 3").getPropertyValue("invalidCountryValidationMesg") 
String actInvalidCountryValidationMesg=respXmlHolder.getNodeValue("//m:sName")
log.info "Actual validation message for invalid country ISO Code input as an Integer is : $actInvalidCountryValidationMesg"
assert exptInvalidCountryValidationMesg==actInvalidCountryValidationMesg,"$exptInvalidCountryValidationMesg - expected validation message for invalid Country ISO Code input as an Integer is not equal to actual message -$actInvalidCountryValidationMesg"













</script></con:config></con:testStep><con:testStep type="groovy" name="SpecialCharInputAsCountryISOCode" id="a6b7ce7d-bc79-45b7-8d81-a279ca8a6b67"><con:settings/><con:config><script>import com.eviware.soapui.support.XmlHolder
import com.eviware.soapui.support.GroovyUtils

//Defining project
def testProject=testRunner.testCase.testSuite.project
//Defining testStep
def testStep=testProject.getTestSuiteByName("TestSuite").getTestCaseByName("TestCase 3").getTestStepByName("CountryCurrencyRequest")

//Getting the country ISO Code from TestCase property
String specialCharInputAsCountryISOCode=testProject.getTestSuiteByName("TestSuite").getTestCaseByName("TestCase 3").getPropertyValue("specialCharInputAsCountryISOCode")

//Fetching Request property from custom properties of CountryCurrencyRequest
def req=context.expand('${CountryCurrencyRequest#Request}')

//Creating object of XmlHolder
def reqXmlhol=new XmlHolder(req)

//Setting the country ISO Code in the request
reqXmlhol.setNodeValue("//web:sCountryISOCode",specialCharInputAsCountryISOCode)

//Set the amended xml
def newXml=reqXmlhol.getXml()

//replacing with ammended xml
testStep.setPropertyValue("Request",newXml)

//Running the test step
testStep.run(testRunner,context)

//Fetching the response (can also be fetched by context)
def resp=testStep.getPropertyValue("Response")

//Creating instance of XmlHolder for response
def respXmlHolder=new XmlHolder(resp)


//Check if validation message appears in response for invalid country ISO Code input
String exptInvalidCountryValidationMesg=testProject.getTestSuiteByName("TestSuite").getTestCaseByName("TestCase 3").getPropertyValue("invalidCountryValidationMesg") 
String actInvalidCountryValidationMesg=respXmlHolder.getNodeValue("//m:sName")
log.info "Actual validation message for invalid country ISO Code input as special chars is : $actInvalidCountryValidationMesg"
assert exptInvalidCountryValidationMesg==actInvalidCountryValidationMesg,"$exptInvalidCountryValidationMesg - expected validation message for invalid Country ISO Code input as special Chars is not equal to actual message -$actInvalidCountryValidationMesg"













</script></con:config></con:testStep><con:testStep type="groovy" name="AlphaNumInputAsCountryISOCode" id="f9831b79-b8d2-4c79-970d-952a176782a6"><con:settings/><con:config><script>import com.eviware.soapui.support.XmlHolder
import com.eviware.soapui.support.GroovyUtils

//Defining project
def testProject=testRunner.testCase.testSuite.project
//Defining testStep
def testStep=testProject.getTestSuiteByName("TestSuite").getTestCaseByName("TestCase 3").getTestStepByName("CountryCurrencyRequest")

//Getting the country ISO Code from TestCase property
String alphaNumInputAsCountryISOCode=testProject.getTestSuiteByName("TestSuite").getTestCaseByName("TestCase 3").getPropertyValue("alphaNumInputAsCountryISOCode")

//Fetching Request property from custom properties of CountryCurrencyRequest
def req=context.expand('${CountryCurrencyRequest#Request}')

//Creating object of XmlHolder
def reqXmlhol=new XmlHolder(req)

//Setting the country ISO Code name in the request
reqXmlhol.setNodeValue("//web:sCountryISOCode",alphaNumInputAsCountryISOCode)

//Set the amended xml
def newXml=reqXmlhol.getXml()

//replacing with ammended xml
testStep.setPropertyValue("Request",newXml)

//Running the test step
testStep.run(testRunner,context)

//Fetching the response (can also be fetched by context)
def resp=testStep.getPropertyValue("Response")

//Creating instance of XmlHolder for response
def respXmlHolder=new XmlHolder(resp)


//Check if validation message appears in response for invalid country ISO Code input
String exptInvalidCountryValidationMesg=testProject.getTestSuiteByName("TestSuite").getTestCaseByName("TestCase 3").getPropertyValue("invalidCountryValidationMesg") 
String actInvalidCountryValidationMesg=respXmlHolder.getNodeValue("//m:sName")
log.info "Actual validation message for invalid country ISO Code input as Alpha Numeric is : $actInvalidCountryValidationMesg"
assert exptInvalidCountryValidationMesg==actInvalidCountryValidationMesg,"$exptInvalidCountryValidationMesg - expected validation message for invalid Country ISO Code input as Alpha Numeric is not equal to actual message -$actInvalidCountryValidationMesg"














</script></con:config></con:testStep><con:testStep type="groovy" name="RandomCharAsCountryISOCode" id="ea669d7a-a376-4320-af36-d5ddc431fdb3"><con:settings/><con:config><script>import com.eviware.soapui.support.XmlHolder
import com.eviware.soapui.support.GroovyUtils

//Defining project
def testProject=testRunner.testCase.testSuite.project
//Defining testStep
def testStep=testProject.getTestSuiteByName("TestSuite").getTestCaseByName("TestCase 3").getTestStepByName("CountryCurrencyRequest")

//Getting the country ISO Code from TestCase property
String randomCharAsCountryISOCode=testProject.getTestSuiteByName("TestSuite").getTestCaseByName("TestCase 3").getPropertyValue("randomCharAsCountryISOCode")

//Fetching Request property from custom properties of CountryCurrencyRequest
def req=context.expand('${CountryCurrencyRequest#Request}')

//Creating object of XmlHolder
def reqXmlhol=new XmlHolder(req)

//Setting the country ISO Code in the request
reqXmlhol.setNodeValue("//web:sCountryISOCode",randomCharAsCountryISOCode)

//Set the amended xml
def newXml=reqXmlhol.getXml()

//replacing with ammended xml
testStep.setPropertyValue("Request",newXml)

//Running the test step
testStep.run(testRunner,context)

//Fetching the response (can also be fetched by context)
def resp=testStep.getPropertyValue("Response")

//Creating instance of XmlHolder for response
def respXmlHolder=new XmlHolder(resp)


//Check if validation message appears in response for invalid country ISO Code input
String exptInvalidCountryValidationMesg=testProject.getTestSuiteByName("TestSuite").getTestCaseByName("TestCase 3").getPropertyValue("invalidCountryValidationMesg") 
String actInvalidCountryValidationMesg=respXmlHolder.getNodeValue("//m:sName")
log.info "Actual validation message for invalid country ISO Code input as Random Chars is : $actInvalidCountryValidationMesg"
assert exptInvalidCountryValidationMesg==actInvalidCountryValidationMesg,"$exptInvalidCountryValidationMesg - expected validation message for invalid Country ISO Code input as Random Chars is not equal to actual message -$actInvalidCountryValidationMesg"














</script></con:config></con:testStep><con:testStep type="groovy" name="LowerCaseCountryISOCode" id="898cf14e-2e07-4062-8712-5f87a9db6c50"><con:settings/><con:config><script>import com.eviware.soapui.support.XmlHolder
import com.eviware.soapui.support.GroovyUtils

//Defining project
def testProject=testRunner.testCase.testSuite.project
//Defining testStep
def testStep=testProject.getTestSuiteByName("TestSuite").getTestCaseByName("TestCase 3").getTestStepByName("CountryCurrencyRequest")

//Getting the country ISO Codee from TestCase property
String lowerCaseCountryISOCode=testProject.getTestSuiteByName("TestSuite").getTestCaseByName("TestCase 3").getPropertyValue("lowerCaseCountryISOCode")

//Fetching Request property from custom properties of CountryCurrencyRequest
def req=context.expand('${CountryCurrencyRequest#Request}')

//Creating object of XmlHolder
def reqXmlhol=new XmlHolder(req)

//Setting the country ISO Code in the request
reqXmlhol.setNodeValue("//web:sCountryISOCode",lowerCaseCountryISOCode)

//Set the amended xml
def newXml=reqXmlhol.getXml()

//replacing with ammended xml
testStep.setPropertyValue("Request",newXml)

//Running the test step
testStep.run(testRunner,context)

//Fetching the response (can also be fetched by context)
def resp=testStep.getPropertyValue("Response")

//Creating instance of XmlHolder for response
def respXmlHolder=new XmlHolder(resp)

//Check if validation message appears in response for invalid country ISO Code input
String exptInvalidCountryValidationMesg=testProject.getTestSuiteByName("TestSuite").getTestCaseByName("TestCase 3").getPropertyValue("invalidCountryValidationMesg") 
String actInvalidCountryValidationMesg=respXmlHolder.getNodeValue("//m:sName")
log.info "Actual validation message for invalid country ISO Code input in Lower case is : $actInvalidCountryValidationMesg"
assert exptInvalidCountryValidationMesg==actInvalidCountryValidationMesg,"$exptInvalidCountryValidationMesg - expected validation message for invalid Country ISO Code input Lower Case is not equal to actual message -$actInvalidCountryValidationMesg"













</script></con:config></con:testStep><con:testStep type="groovy" name="UpperLowerCaseCountryISOCode" id="6c14b60d-7535-47b6-a497-4829fd886c62"><con:settings/><con:config><script>import com.eviware.soapui.support.XmlHolder
import com.eviware.soapui.support.GroovyUtils

//Defining project
def testProject=testRunner.testCase.testSuite.project
//Defining testStep
def testStep=testProject.getTestSuiteByName("TestSuite").getTestCaseByName("TestCase 3").getTestStepByName("CountryCurrencyRequest")

//Getting the country ISO Code from TestCase property
String upperCaseCountryISOCode=testProject.getTestSuiteByName("TestSuite").getTestCaseByName("TestCase 3").getPropertyValue("upperLowerCaseCountryISOCode")

//Fetching Request property from custom properties of CountryCurrencyRequest
def req=context.expand('${CountryCurrencyRequest#Request}')

//Creating object of XmlHolder
def reqXmlhol=new XmlHolder(req)

//Setting the country ISO Code in the request
reqXmlhol.setNodeValue("//web:sCountryISOCode",upperCaseCountryISOCode)

//Set the amended xml
def newXml=reqXmlhol.getXml()

//replacing with ammended xml
testStep.setPropertyValue("Request",newXml)

//Running the test step
testStep.run(testRunner,context)

//Fetching the response (can also be fetched by context)
def resp=testStep.getPropertyValue("Response")

//Creating instance of XmlHolder for response
def respXmlHolder=new XmlHolder(resp)

//Check if validation message appears in response for invalid country ISO Code input
String exptInvalidCountryValidationMesg=testProject.getTestSuiteByName("TestSuite").getTestCaseByName("TestCase 3").getPropertyValue("invalidCountryValidationMesg") 
String actInvalidCountryValidationMesg=respXmlHolder.getNodeValue("//m:sName")
log.info "Actual validation message for invalid country ISO Code input in Upper case is : $actInvalidCountryValidationMesg"
assert exptInvalidCountryValidationMesg==actInvalidCountryValidationMesg,"$exptInvalidCountryValidationMesg - expected validation message for invalid Country ISO Code input Upper Case is not equal to actual message -$actInvalidCountryValidationMesg"














</script></con:config></con:testStep><con:properties><con:property><con:name>integerInputAsCountryISOCode</con:name><con:value>12</con:value></con:property><con:property><con:name>invalidCountryValidationMesg</con:name><con:value>Country not found in the database</con:value></con:property><con:property><con:name>blankInputAsCountryISOCode</con:name><con:value/></con:property><con:property><con:name>specialCharInputAsCountryISOCode</con:name><con:value>$£</con:value></con:property><con:property><con:name>alphaNumInputAsCountryISOCode</con:name><con:value>1n</con:value></con:property><con:property><con:name>randomCharAsCountryISOCode</con:name><con:value>1n$</con:value></con:property><con:property><con:name>lowerCaseCountryISOCode</con:name><con:value>dz</con:value></con:property><con:property><con:name>upperLowerCaseCountryISOCode</con:name><con:value>Dz</con:value></con:property></con:properties></con:testCase><con:properties><con:property><con:name>exptContentType</con:name><con:value>soap+xml</con:value></con:property><con:property><con:name>exptStatusHttpStatusCode</con:name><con:value>200</con:value></con:property></con:properties></con:testSuite><con:properties><con:property><con:name>testEndPoint</con:name><con:value>http://webservices.oorsprong.org/websamples.countryinfo/CountryInfoService.wso</con:value></con:property></con:properties><con:wssContainer/><con:oAuth2ProfileContainer/><con:oAuth1ProfileContainer/><con:sensitiveInformation/></con:soapui-project>